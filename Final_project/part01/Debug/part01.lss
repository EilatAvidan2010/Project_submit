
part01.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800100  00000856  000008ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000856  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  00800120  00800120  0000090a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000090a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000968  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  000009a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000915  00000000  00000000  000009ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000768  00000000  00000000  00001301  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003b4  00000000  00000000  00001a69  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e4  00000000  00000000  00001e20  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000400  00000000  00000000  00001f04  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002e9  00000000  00000000  00002304  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  000025ed  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 e2 00 	jmp	0x1c4	; 0x1c4 <__vector_16>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 e5       	ldi	r30, 0x56	; 86
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 32       	cpi	r26, 0x20	; 32
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e2       	ldi	r26, 0x20	; 32
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a6 33       	cpi	r26, 0x36	; 54
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 b6 00 	call	0x16c	; 0x16c <main>
  9e:	0c 94 29 04 	jmp	0x852	; 0x852 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <adc_init>:
char outs[20];


void adc_init(void)
{
	ADMUX = (0<<REFS1)| 	// Reference Selection Bits
  a6:	80 e6       	ldi	r24, 0x60	; 96
  a8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	(1<<ADLAR)| 			// ADC left Adjust Result
	(0<<MUX2)| 				// Analog Channel Selection Bits
	(0<<MUX1)| 				// ADC0 Pin
	(0<<MUX0);

	ADCSRA = (1<<ADEN)| 	// ADC ENable
  ac:	85 ee       	ldi	r24, 0xE5	; 229
  ae:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
  b2:	08 95       	ret

000000b4 <read_adc>:
}

void read_adc(void)
{
	unsigned char i =4;					//set i to 4- make 4 readings
	adc_speed = 0;						//initialize ADC_TEMP
  b4:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <adc_speed+0x1>
  b8:	10 92 34 01 	sts	0x0134, r1	; 0x800134 <adc_speed>
  bc:	24 e0       	ldi	r18, 0x04	; 4
	while (i--)
	{
		ADCSRA |= (1<<ADSC);
  be:	ea e7       	ldi	r30, 0x7A	; 122
  c0:	f0 e0       	ldi	r31, 0x00	; 0
		while((ADCSRA & (1<<ADIF)) == 0);
		adc_speed += ADCH;					//sum up 4 readings
  c2:	a9 e7       	ldi	r26, 0x79	; 121
  c4:	b0 e0       	ldi	r27, 0x00	; 0
{
	unsigned char i =4;					//set i to 4- make 4 readings
	adc_speed = 0;						//initialize ADC_TEMP
	while (i--)
	{
		ADCSRA |= (1<<ADSC);
  c6:	80 81       	ld	r24, Z
  c8:	80 64       	ori	r24, 0x40	; 64
  ca:	80 83       	st	Z, r24
		while((ADCSRA & (1<<ADIF)) == 0);
  cc:	80 81       	ld	r24, Z
  ce:	84 ff       	sbrs	r24, 4
  d0:	fd cf       	rjmp	.-6      	; 0xcc <read_adc+0x18>
		adc_speed += ADCH;					//sum up 4 readings
  d2:	3c 91       	ld	r19, X
  d4:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <adc_speed>
  d8:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <adc_speed+0x1>
  dc:	83 0f       	add	r24, r19
  de:	91 1d       	adc	r25, r1
  e0:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <adc_speed+0x1>
  e4:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <adc_speed>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e8:	3f e7       	ldi	r19, 0x7F	; 127
  ea:	88 e3       	ldi	r24, 0x38	; 56
  ec:	91 e0       	ldi	r25, 0x01	; 1
  ee:	31 50       	subi	r19, 0x01	; 1
  f0:	80 40       	sbci	r24, 0x00	; 0
  f2:	90 40       	sbci	r25, 0x00	; 0
  f4:	e1 f7       	brne	.-8      	; 0xee <read_adc+0x3a>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <read_adc+0x44>
  f8:	00 00       	nop
  fa:	21 50       	subi	r18, 0x01	; 1

void read_adc(void)
{
	unsigned char i =4;					//set i to 4- make 4 readings
	adc_speed = 0;						//initialize ADC_TEMP
	while (i--)
  fc:	21 f7       	brne	.-56     	; 0xc6 <read_adc+0x12>
		ADCSRA |= (1<<ADSC);
		while((ADCSRA & (1<<ADIF)) == 0);
		adc_speed += ADCH;					//sum up 4 readings
		_delay_ms(50);
	}
	adc_speed = adc_speed / 4; 				// Average of four samples
  fe:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <adc_speed>
 102:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <adc_speed+0x1>
 106:	96 95       	lsr	r25
 108:	87 95       	ror	r24
 10a:	96 95       	lsr	r25
 10c:	87 95       	ror	r24
 10e:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <adc_speed+0x1>
 112:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <adc_speed>
 116:	08 95       	ret

00000118 <USART_init>:
}


void USART_init( unsigned int ubrr )
{
	UBRR0H = (unsigned char)(ubrr>>8);			//set baud rate
 118:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char)ubrr;
 11c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B = (1 << TXEN0) | (1 <<RXEN0); 		// Enable receiver, transmitter
 120:	88 e1       	ldi	r24, 0x18	; 24
 122:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = (1 << UCSZ00) | (1 << UCSZ01); 	//asynchronous 8-bit data 1 stop bit
 126:	86 e0       	ldi	r24, 0x06	; 6
 128:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 12c:	08 95       	ret

0000012e <USART_tx_string>:
}

void USART_tx_string( char *data )
{
 12e:	cf 93       	push	r28
 130:	df 93       	push	r29
	while ((*data != '\0'))
 132:	fc 01       	movw	r30, r24
 134:	20 81       	ld	r18, Z
 136:	22 23       	and	r18, r18
 138:	b1 f0       	breq	.+44     	; 0x166 <USART_tx_string+0x38>
 13a:	dc 01       	movw	r26, r24
 13c:	11 96       	adiw	r26, 0x01	; 1
	{
		while (!(UCSR0A & (1 <<UDRE0)));	//wait for the transmit buffer to empty
 13e:	e0 ec       	ldi	r30, 0xC0	; 192
 140:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0 = *data;						//put the data into the empty buffer, which sends the data
 142:	c6 ec       	ldi	r28, 0xC6	; 198
 144:	d0 e0       	ldi	r29, 0x00	; 0

void USART_tx_string( char *data )
{
	while ((*data != '\0'))
	{
		while (!(UCSR0A & (1 <<UDRE0)));	//wait for the transmit buffer to empty
 146:	90 81       	ld	r25, Z
 148:	95 ff       	sbrs	r25, 5
 14a:	fd cf       	rjmp	.-6      	; 0x146 <USART_tx_string+0x18>
		UDR0 = *data;						//put the data into the empty buffer, which sends the data
 14c:	28 83       	st	Y, r18
 14e:	2f e3       	ldi	r18, 0x3F	; 63
 150:	8d e0       	ldi	r24, 0x0D	; 13
 152:	93 e0       	ldi	r25, 0x03	; 3
 154:	21 50       	subi	r18, 0x01	; 1
 156:	80 40       	sbci	r24, 0x00	; 0
 158:	90 40       	sbci	r25, 0x00	; 0
 15a:	e1 f7       	brne	.-8      	; 0x154 <USART_tx_string+0x26>
 15c:	00 c0       	rjmp	.+0      	; 0x15e <USART_tx_string+0x30>
 15e:	00 00       	nop
	UCSR0C = (1 << UCSZ00) | (1 << UCSZ01); 	//asynchronous 8-bit data 1 stop bit
}

void USART_tx_string( char *data )
{
	while ((*data != '\0'))
 160:	2d 91       	ld	r18, X+
 162:	21 11       	cpse	r18, r1
 164:	f0 cf       	rjmp	.-32     	; 0x146 <USART_tx_string+0x18>
		while (!(UCSR0A & (1 <<UDRE0)));	//wait for the transmit buffer to empty
		UDR0 = *data;						//put the data into the empty buffer, which sends the data
		_delay_ms(125); 					// wait a bit
		data++;
	}
}
 166:	df 91       	pop	r29
 168:	cf 91       	pop	r28
 16a:	08 95       	ret

0000016c <main>:
	return UDR0;
}
*/
int main()
{
		adc_init(); 			// Initialize the ADC (Analog / Digital Converter)
 16c:	0e 94 53 00 	call	0xa6	; 0xa6 <adc_init>
		USART_init(UBRR_9600); 	// Initialize the USART (RS232 interface)
 170:	83 e3       	ldi	r24, 0x33	; 51
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	0e 94 8c 00 	call	0x118	; 0x118 <USART_init>
		USART_tx_string("DC motor with encoder:\r\n"); 	
 178:	80 e0       	ldi	r24, 0x00	; 0
 17a:	91 e0       	ldi	r25, 0x01	; 1
 17c:	0e 94 97 00 	call	0x12e	; 0x12e <USART_tx_string>
 180:	2f e3       	ldi	r18, 0x3F	; 63
 182:	8d e0       	ldi	r24, 0x0D	; 13
 184:	93 e0       	ldi	r25, 0x03	; 3
 186:	21 50       	subi	r18, 0x01	; 1
 188:	80 40       	sbci	r24, 0x00	; 0
 18a:	90 40       	sbci	r25, 0x00	; 0
 18c:	e1 f7       	brne	.-8      	; 0x186 <main+0x1a>
 18e:	00 c0       	rjmp	.+0      	; 0x190 <main+0x24>
 190:	00 00       	nop
		_delay_ms(125); 					// wait a bit
		TCCR0A |= (1 << WGM00);		//fast pwm mode
 192:	84 b5       	in	r24, 0x24	; 36
 194:	81 60       	ori	r24, 0x01	; 1
 196:	84 bd       	out	0x24, r24	; 36
		TCCR0A |= (1 << WGM01);		//fast pwm mode
 198:	84 b5       	in	r24, 0x24	; 36
 19a:	82 60       	ori	r24, 0x02	; 2
 19c:	84 bd       	out	0x24, r24	; 36
		TCCR0A |= (1 << COM0A0);	//compare output mode
 19e:	84 b5       	in	r24, 0x24	; 36
 1a0:	80 64       	ori	r24, 0x40	; 64
 1a2:	84 bd       	out	0x24, r24	; 36
		TCCR0A |= (1 << COM0A1);	//compare output mode
 1a4:	84 b5       	in	r24, 0x24	; 36
 1a6:	80 68       	ori	r24, 0x80	; 128
 1a8:	84 bd       	out	0x24, r24	; 36
		TCCR0B |= (1 << CS00);		//set timer counter
 1aa:	85 b5       	in	r24, 0x25	; 37
 1ac:	81 60       	ori	r24, 0x01	; 1
 1ae:	85 bd       	out	0x25, r24	; 37
		TCCR0B &= ~(1 << CS01);
 1b0:	85 b5       	in	r24, 0x25	; 37
 1b2:	8d 7f       	andi	r24, 0xFD	; 253
 1b4:	85 bd       	out	0x25, r24	; 37
		TCCR0B &= ~(1 << CS02);
 1b6:	85 b5       	in	r24, 0x25	; 37
 1b8:	8b 7f       	andi	r24, 0xFB	; 251
 1ba:	85 bd       	out	0x25, r24	; 37
		OCR0A = 128;						//50 % duty cycle 
 1bc:	80 e8       	ldi	r24, 0x80	; 128
 1be:	87 bd       	out	0x27, r24	; 39
		
		sei();
 1c0:	78 94       	sei
 1c2:	ff cf       	rjmp	.-2      	; 0x1c2 <main+0x56>

000001c4 <__vector_16>:
		}

}

ISR (TIMER0_OVF_vect)					//overflow interrupt
{
 1c4:	1f 92       	push	r1
 1c6:	0f 92       	push	r0
 1c8:	0f b6       	in	r0, 0x3f	; 63
 1ca:	0f 92       	push	r0
 1cc:	11 24       	eor	r1, r1
 1ce:	2f 93       	push	r18
 1d0:	3f 93       	push	r19
 1d2:	4f 93       	push	r20
 1d4:	5f 93       	push	r21
 1d6:	6f 93       	push	r22
 1d8:	7f 93       	push	r23
 1da:	8f 93       	push	r24
 1dc:	9f 93       	push	r25
 1de:	af 93       	push	r26
 1e0:	bf 93       	push	r27
 1e2:	ef 93       	push	r30
 1e4:	ff 93       	push	r31
	TCCR0B = 0;							//stop the counter
 1e6:	15 bc       	out	0x25, r1	; 37
	read_adc();
 1e8:	0e 94 5a 00 	call	0xb4	; 0xb4 <read_adc>
	snprintf(outs,sizeof(outs),"%3d\r\n", adc_speed);	// print ADC value
 1ec:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <adc_speed>
 1f0:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <adc_speed+0x1>
 1f4:	9f 93       	push	r25
 1f6:	8f 93       	push	r24
 1f8:	89 e1       	ldi	r24, 0x19	; 25
 1fa:	91 e0       	ldi	r25, 0x01	; 1
 1fc:	9f 93       	push	r25
 1fe:	8f 93       	push	r24
 200:	1f 92       	push	r1
 202:	84 e1       	ldi	r24, 0x14	; 20
 204:	8f 93       	push	r24
 206:	80 e2       	ldi	r24, 0x20	; 32
 208:	91 e0       	ldi	r25, 0x01	; 1
 20a:	9f 93       	push	r25
 20c:	8f 93       	push	r24
 20e:	0e 94 31 01 	call	0x262	; 0x262 <snprintf>
	USART_tx_string(outs);
 212:	80 e2       	ldi	r24, 0x20	; 32
 214:	91 e0       	ldi	r25, 0x01	; 1
 216:	0e 94 97 00 	call	0x12e	; 0x12e <USART_tx_string>
 21a:	2f e3       	ldi	r18, 0x3F	; 63
 21c:	8d e0       	ldi	r24, 0x0D	; 13
 21e:	93 e0       	ldi	r25, 0x03	; 3
 220:	21 50       	subi	r18, 0x01	; 1
 222:	80 40       	sbci	r24, 0x00	; 0
 224:	90 40       	sbci	r25, 0x00	; 0
 226:	e1 f7       	brne	.-8      	; 0x220 <__vector_16+0x5c>
 228:	00 c0       	rjmp	.+0      	; 0x22a <__vector_16+0x66>
 22a:	00 00       	nop
	_delay_ms(125); 					// wait a bit
	TCNT0 = 128;
 22c:	80 e8       	ldi	r24, 0x80	; 128
 22e:	86 bd       	out	0x26, r24	; 38
}
 230:	8d b7       	in	r24, 0x3d	; 61
 232:	9e b7       	in	r25, 0x3e	; 62
 234:	08 96       	adiw	r24, 0x08	; 8
 236:	0f b6       	in	r0, 0x3f	; 63
 238:	f8 94       	cli
 23a:	9e bf       	out	0x3e, r25	; 62
 23c:	0f be       	out	0x3f, r0	; 63
 23e:	8d bf       	out	0x3d, r24	; 61
 240:	ff 91       	pop	r31
 242:	ef 91       	pop	r30
 244:	bf 91       	pop	r27
 246:	af 91       	pop	r26
 248:	9f 91       	pop	r25
 24a:	8f 91       	pop	r24
 24c:	7f 91       	pop	r23
 24e:	6f 91       	pop	r22
 250:	5f 91       	pop	r21
 252:	4f 91       	pop	r20
 254:	3f 91       	pop	r19
 256:	2f 91       	pop	r18
 258:	0f 90       	pop	r0
 25a:	0f be       	out	0x3f, r0	; 63
 25c:	0f 90       	pop	r0
 25e:	1f 90       	pop	r1
 260:	18 95       	reti

00000262 <snprintf>:
 262:	ae e0       	ldi	r26, 0x0E	; 14
 264:	b0 e0       	ldi	r27, 0x00	; 0
 266:	e7 e3       	ldi	r30, 0x37	; 55
 268:	f1 e0       	ldi	r31, 0x01	; 1
 26a:	0c 94 00 04 	jmp	0x800	; 0x800 <__prologue_saves__+0x1c>
 26e:	0d 89       	ldd	r16, Y+21	; 0x15
 270:	1e 89       	ldd	r17, Y+22	; 0x16
 272:	8f 89       	ldd	r24, Y+23	; 0x17
 274:	98 8d       	ldd	r25, Y+24	; 0x18
 276:	26 e0       	ldi	r18, 0x06	; 6
 278:	2c 83       	std	Y+4, r18	; 0x04
 27a:	1a 83       	std	Y+2, r17	; 0x02
 27c:	09 83       	std	Y+1, r16	; 0x01
 27e:	97 ff       	sbrs	r25, 7
 280:	02 c0       	rjmp	.+4      	; 0x286 <snprintf+0x24>
 282:	80 e0       	ldi	r24, 0x00	; 0
 284:	90 e8       	ldi	r25, 0x80	; 128
 286:	01 97       	sbiw	r24, 0x01	; 1
 288:	9e 83       	std	Y+6, r25	; 0x06
 28a:	8d 83       	std	Y+5, r24	; 0x05
 28c:	ae 01       	movw	r20, r28
 28e:	45 5e       	subi	r20, 0xE5	; 229
 290:	5f 4f       	sbci	r21, 0xFF	; 255
 292:	69 8d       	ldd	r22, Y+25	; 0x19
 294:	7a 8d       	ldd	r23, Y+26	; 0x1a
 296:	ce 01       	movw	r24, r28
 298:	01 96       	adiw	r24, 0x01	; 1
 29a:	0e 94 61 01 	call	0x2c2	; 0x2c2 <vfprintf>
 29e:	4d 81       	ldd	r20, Y+5	; 0x05
 2a0:	5e 81       	ldd	r21, Y+6	; 0x06
 2a2:	57 fd       	sbrc	r21, 7
 2a4:	0a c0       	rjmp	.+20     	; 0x2ba <snprintf+0x58>
 2a6:	2f 81       	ldd	r18, Y+7	; 0x07
 2a8:	38 85       	ldd	r19, Y+8	; 0x08
 2aa:	42 17       	cp	r20, r18
 2ac:	53 07       	cpc	r21, r19
 2ae:	0c f4       	brge	.+2      	; 0x2b2 <snprintf+0x50>
 2b0:	9a 01       	movw	r18, r20
 2b2:	f8 01       	movw	r30, r16
 2b4:	e2 0f       	add	r30, r18
 2b6:	f3 1f       	adc	r31, r19
 2b8:	10 82       	st	Z, r1
 2ba:	2e 96       	adiw	r28, 0x0e	; 14
 2bc:	e4 e0       	ldi	r30, 0x04	; 4
 2be:	0c 94 1c 04 	jmp	0x838	; 0x838 <__epilogue_restores__+0x1c>

000002c2 <vfprintf>:
 2c2:	ab e0       	ldi	r26, 0x0B	; 11
 2c4:	b0 e0       	ldi	r27, 0x00	; 0
 2c6:	e7 e6       	ldi	r30, 0x67	; 103
 2c8:	f1 e0       	ldi	r31, 0x01	; 1
 2ca:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__prologue_saves__>
 2ce:	6c 01       	movw	r12, r24
 2d0:	7b 01       	movw	r14, r22
 2d2:	8a 01       	movw	r16, r20
 2d4:	fc 01       	movw	r30, r24
 2d6:	17 82       	std	Z+7, r1	; 0x07
 2d8:	16 82       	std	Z+6, r1	; 0x06
 2da:	83 81       	ldd	r24, Z+3	; 0x03
 2dc:	81 ff       	sbrs	r24, 1
 2de:	cc c1       	rjmp	.+920    	; 0x678 <__LOCK_REGION_LENGTH__+0x278>
 2e0:	ce 01       	movw	r24, r28
 2e2:	01 96       	adiw	r24, 0x01	; 1
 2e4:	3c 01       	movw	r6, r24
 2e6:	f6 01       	movw	r30, r12
 2e8:	93 81       	ldd	r25, Z+3	; 0x03
 2ea:	f7 01       	movw	r30, r14
 2ec:	93 fd       	sbrc	r25, 3
 2ee:	85 91       	lpm	r24, Z+
 2f0:	93 ff       	sbrs	r25, 3
 2f2:	81 91       	ld	r24, Z+
 2f4:	7f 01       	movw	r14, r30
 2f6:	88 23       	and	r24, r24
 2f8:	09 f4       	brne	.+2      	; 0x2fc <vfprintf+0x3a>
 2fa:	ba c1       	rjmp	.+884    	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
 2fc:	85 32       	cpi	r24, 0x25	; 37
 2fe:	39 f4       	brne	.+14     	; 0x30e <vfprintf+0x4c>
 300:	93 fd       	sbrc	r25, 3
 302:	85 91       	lpm	r24, Z+
 304:	93 ff       	sbrs	r25, 3
 306:	81 91       	ld	r24, Z+
 308:	7f 01       	movw	r14, r30
 30a:	85 32       	cpi	r24, 0x25	; 37
 30c:	29 f4       	brne	.+10     	; 0x318 <vfprintf+0x56>
 30e:	b6 01       	movw	r22, r12
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	0e 94 58 03 	call	0x6b0	; 0x6b0 <fputc>
 316:	e7 cf       	rjmp	.-50     	; 0x2e6 <vfprintf+0x24>
 318:	91 2c       	mov	r9, r1
 31a:	21 2c       	mov	r2, r1
 31c:	31 2c       	mov	r3, r1
 31e:	ff e1       	ldi	r31, 0x1F	; 31
 320:	f3 15       	cp	r31, r3
 322:	d8 f0       	brcs	.+54     	; 0x35a <vfprintf+0x98>
 324:	8b 32       	cpi	r24, 0x2B	; 43
 326:	79 f0       	breq	.+30     	; 0x346 <vfprintf+0x84>
 328:	38 f4       	brcc	.+14     	; 0x338 <vfprintf+0x76>
 32a:	80 32       	cpi	r24, 0x20	; 32
 32c:	79 f0       	breq	.+30     	; 0x34c <vfprintf+0x8a>
 32e:	83 32       	cpi	r24, 0x23	; 35
 330:	a1 f4       	brne	.+40     	; 0x35a <vfprintf+0x98>
 332:	23 2d       	mov	r18, r3
 334:	20 61       	ori	r18, 0x10	; 16
 336:	1d c0       	rjmp	.+58     	; 0x372 <vfprintf+0xb0>
 338:	8d 32       	cpi	r24, 0x2D	; 45
 33a:	61 f0       	breq	.+24     	; 0x354 <vfprintf+0x92>
 33c:	80 33       	cpi	r24, 0x30	; 48
 33e:	69 f4       	brne	.+26     	; 0x35a <vfprintf+0x98>
 340:	23 2d       	mov	r18, r3
 342:	21 60       	ori	r18, 0x01	; 1
 344:	16 c0       	rjmp	.+44     	; 0x372 <vfprintf+0xb0>
 346:	83 2d       	mov	r24, r3
 348:	82 60       	ori	r24, 0x02	; 2
 34a:	38 2e       	mov	r3, r24
 34c:	e3 2d       	mov	r30, r3
 34e:	e4 60       	ori	r30, 0x04	; 4
 350:	3e 2e       	mov	r3, r30
 352:	2a c0       	rjmp	.+84     	; 0x3a8 <vfprintf+0xe6>
 354:	f3 2d       	mov	r31, r3
 356:	f8 60       	ori	r31, 0x08	; 8
 358:	1d c0       	rjmp	.+58     	; 0x394 <vfprintf+0xd2>
 35a:	37 fc       	sbrc	r3, 7
 35c:	2d c0       	rjmp	.+90     	; 0x3b8 <vfprintf+0xf6>
 35e:	20 ed       	ldi	r18, 0xD0	; 208
 360:	28 0f       	add	r18, r24
 362:	2a 30       	cpi	r18, 0x0A	; 10
 364:	40 f0       	brcs	.+16     	; 0x376 <vfprintf+0xb4>
 366:	8e 32       	cpi	r24, 0x2E	; 46
 368:	b9 f4       	brne	.+46     	; 0x398 <vfprintf+0xd6>
 36a:	36 fc       	sbrc	r3, 6
 36c:	81 c1       	rjmp	.+770    	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
 36e:	23 2d       	mov	r18, r3
 370:	20 64       	ori	r18, 0x40	; 64
 372:	32 2e       	mov	r3, r18
 374:	19 c0       	rjmp	.+50     	; 0x3a8 <vfprintf+0xe6>
 376:	36 fe       	sbrs	r3, 6
 378:	06 c0       	rjmp	.+12     	; 0x386 <vfprintf+0xc4>
 37a:	8a e0       	ldi	r24, 0x0A	; 10
 37c:	98 9e       	mul	r9, r24
 37e:	20 0d       	add	r18, r0
 380:	11 24       	eor	r1, r1
 382:	92 2e       	mov	r9, r18
 384:	11 c0       	rjmp	.+34     	; 0x3a8 <vfprintf+0xe6>
 386:	ea e0       	ldi	r30, 0x0A	; 10
 388:	2e 9e       	mul	r2, r30
 38a:	20 0d       	add	r18, r0
 38c:	11 24       	eor	r1, r1
 38e:	22 2e       	mov	r2, r18
 390:	f3 2d       	mov	r31, r3
 392:	f0 62       	ori	r31, 0x20	; 32
 394:	3f 2e       	mov	r3, r31
 396:	08 c0       	rjmp	.+16     	; 0x3a8 <vfprintf+0xe6>
 398:	8c 36       	cpi	r24, 0x6C	; 108
 39a:	21 f4       	brne	.+8      	; 0x3a4 <vfprintf+0xe2>
 39c:	83 2d       	mov	r24, r3
 39e:	80 68       	ori	r24, 0x80	; 128
 3a0:	38 2e       	mov	r3, r24
 3a2:	02 c0       	rjmp	.+4      	; 0x3a8 <vfprintf+0xe6>
 3a4:	88 36       	cpi	r24, 0x68	; 104
 3a6:	41 f4       	brne	.+16     	; 0x3b8 <vfprintf+0xf6>
 3a8:	f7 01       	movw	r30, r14
 3aa:	93 fd       	sbrc	r25, 3
 3ac:	85 91       	lpm	r24, Z+
 3ae:	93 ff       	sbrs	r25, 3
 3b0:	81 91       	ld	r24, Z+
 3b2:	7f 01       	movw	r14, r30
 3b4:	81 11       	cpse	r24, r1
 3b6:	b3 cf       	rjmp	.-154    	; 0x31e <vfprintf+0x5c>
 3b8:	98 2f       	mov	r25, r24
 3ba:	9f 7d       	andi	r25, 0xDF	; 223
 3bc:	95 54       	subi	r25, 0x45	; 69
 3be:	93 30       	cpi	r25, 0x03	; 3
 3c0:	28 f4       	brcc	.+10     	; 0x3cc <vfprintf+0x10a>
 3c2:	0c 5f       	subi	r16, 0xFC	; 252
 3c4:	1f 4f       	sbci	r17, 0xFF	; 255
 3c6:	9f e3       	ldi	r25, 0x3F	; 63
 3c8:	99 83       	std	Y+1, r25	; 0x01
 3ca:	0d c0       	rjmp	.+26     	; 0x3e6 <vfprintf+0x124>
 3cc:	83 36       	cpi	r24, 0x63	; 99
 3ce:	31 f0       	breq	.+12     	; 0x3dc <vfprintf+0x11a>
 3d0:	83 37       	cpi	r24, 0x73	; 115
 3d2:	71 f0       	breq	.+28     	; 0x3f0 <vfprintf+0x12e>
 3d4:	83 35       	cpi	r24, 0x53	; 83
 3d6:	09 f0       	breq	.+2      	; 0x3da <vfprintf+0x118>
 3d8:	59 c0       	rjmp	.+178    	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 3da:	21 c0       	rjmp	.+66     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 3dc:	f8 01       	movw	r30, r16
 3de:	80 81       	ld	r24, Z
 3e0:	89 83       	std	Y+1, r24	; 0x01
 3e2:	0e 5f       	subi	r16, 0xFE	; 254
 3e4:	1f 4f       	sbci	r17, 0xFF	; 255
 3e6:	88 24       	eor	r8, r8
 3e8:	83 94       	inc	r8
 3ea:	91 2c       	mov	r9, r1
 3ec:	53 01       	movw	r10, r6
 3ee:	13 c0       	rjmp	.+38     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 3f0:	28 01       	movw	r4, r16
 3f2:	f2 e0       	ldi	r31, 0x02	; 2
 3f4:	4f 0e       	add	r4, r31
 3f6:	51 1c       	adc	r5, r1
 3f8:	f8 01       	movw	r30, r16
 3fa:	a0 80       	ld	r10, Z
 3fc:	b1 80       	ldd	r11, Z+1	; 0x01
 3fe:	36 fe       	sbrs	r3, 6
 400:	03 c0       	rjmp	.+6      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 402:	69 2d       	mov	r22, r9
 404:	70 e0       	ldi	r23, 0x00	; 0
 406:	02 c0       	rjmp	.+4      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 408:	6f ef       	ldi	r22, 0xFF	; 255
 40a:	7f ef       	ldi	r23, 0xFF	; 255
 40c:	c5 01       	movw	r24, r10
 40e:	0e 94 4d 03 	call	0x69a	; 0x69a <strnlen>
 412:	4c 01       	movw	r8, r24
 414:	82 01       	movw	r16, r4
 416:	f3 2d       	mov	r31, r3
 418:	ff 77       	andi	r31, 0x7F	; 127
 41a:	3f 2e       	mov	r3, r31
 41c:	16 c0       	rjmp	.+44     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 41e:	28 01       	movw	r4, r16
 420:	22 e0       	ldi	r18, 0x02	; 2
 422:	42 0e       	add	r4, r18
 424:	51 1c       	adc	r5, r1
 426:	f8 01       	movw	r30, r16
 428:	a0 80       	ld	r10, Z
 42a:	b1 80       	ldd	r11, Z+1	; 0x01
 42c:	36 fe       	sbrs	r3, 6
 42e:	03 c0       	rjmp	.+6      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 430:	69 2d       	mov	r22, r9
 432:	70 e0       	ldi	r23, 0x00	; 0
 434:	02 c0       	rjmp	.+4      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 436:	6f ef       	ldi	r22, 0xFF	; 255
 438:	7f ef       	ldi	r23, 0xFF	; 255
 43a:	c5 01       	movw	r24, r10
 43c:	0e 94 42 03 	call	0x684	; 0x684 <strnlen_P>
 440:	4c 01       	movw	r8, r24
 442:	f3 2d       	mov	r31, r3
 444:	f0 68       	ori	r31, 0x80	; 128
 446:	3f 2e       	mov	r3, r31
 448:	82 01       	movw	r16, r4
 44a:	33 fc       	sbrc	r3, 3
 44c:	1b c0       	rjmp	.+54     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 44e:	82 2d       	mov	r24, r2
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	88 16       	cp	r8, r24
 454:	99 06       	cpc	r9, r25
 456:	b0 f4       	brcc	.+44     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 458:	b6 01       	movw	r22, r12
 45a:	80 e2       	ldi	r24, 0x20	; 32
 45c:	90 e0       	ldi	r25, 0x00	; 0
 45e:	0e 94 58 03 	call	0x6b0	; 0x6b0 <fputc>
 462:	2a 94       	dec	r2
 464:	f4 cf       	rjmp	.-24     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 466:	f5 01       	movw	r30, r10
 468:	37 fc       	sbrc	r3, 7
 46a:	85 91       	lpm	r24, Z+
 46c:	37 fe       	sbrs	r3, 7
 46e:	81 91       	ld	r24, Z+
 470:	5f 01       	movw	r10, r30
 472:	b6 01       	movw	r22, r12
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	0e 94 58 03 	call	0x6b0	; 0x6b0 <fputc>
 47a:	21 10       	cpse	r2, r1
 47c:	2a 94       	dec	r2
 47e:	21 e0       	ldi	r18, 0x01	; 1
 480:	82 1a       	sub	r8, r18
 482:	91 08       	sbc	r9, r1
 484:	81 14       	cp	r8, r1
 486:	91 04       	cpc	r9, r1
 488:	71 f7       	brne	.-36     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 48a:	e8 c0       	rjmp	.+464    	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 48c:	84 36       	cpi	r24, 0x64	; 100
 48e:	11 f0       	breq	.+4      	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 490:	89 36       	cpi	r24, 0x69	; 105
 492:	41 f5       	brne	.+80     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 494:	f8 01       	movw	r30, r16
 496:	37 fe       	sbrs	r3, 7
 498:	07 c0       	rjmp	.+14     	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 49a:	60 81       	ld	r22, Z
 49c:	71 81       	ldd	r23, Z+1	; 0x01
 49e:	82 81       	ldd	r24, Z+2	; 0x02
 4a0:	93 81       	ldd	r25, Z+3	; 0x03
 4a2:	0c 5f       	subi	r16, 0xFC	; 252
 4a4:	1f 4f       	sbci	r17, 0xFF	; 255
 4a6:	08 c0       	rjmp	.+16     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 4a8:	60 81       	ld	r22, Z
 4aa:	71 81       	ldd	r23, Z+1	; 0x01
 4ac:	07 2e       	mov	r0, r23
 4ae:	00 0c       	add	r0, r0
 4b0:	88 0b       	sbc	r24, r24
 4b2:	99 0b       	sbc	r25, r25
 4b4:	0e 5f       	subi	r16, 0xFE	; 254
 4b6:	1f 4f       	sbci	r17, 0xFF	; 255
 4b8:	f3 2d       	mov	r31, r3
 4ba:	ff 76       	andi	r31, 0x6F	; 111
 4bc:	3f 2e       	mov	r3, r31
 4be:	97 ff       	sbrs	r25, 7
 4c0:	09 c0       	rjmp	.+18     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4c2:	90 95       	com	r25
 4c4:	80 95       	com	r24
 4c6:	70 95       	com	r23
 4c8:	61 95       	neg	r22
 4ca:	7f 4f       	sbci	r23, 0xFF	; 255
 4cc:	8f 4f       	sbci	r24, 0xFF	; 255
 4ce:	9f 4f       	sbci	r25, 0xFF	; 255
 4d0:	f0 68       	ori	r31, 0x80	; 128
 4d2:	3f 2e       	mov	r3, r31
 4d4:	2a e0       	ldi	r18, 0x0A	; 10
 4d6:	30 e0       	ldi	r19, 0x00	; 0
 4d8:	a3 01       	movw	r20, r6
 4da:	0e 94 94 03 	call	0x728	; 0x728 <__ultoa_invert>
 4de:	88 2e       	mov	r8, r24
 4e0:	86 18       	sub	r8, r6
 4e2:	45 c0       	rjmp	.+138    	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 4e4:	85 37       	cpi	r24, 0x75	; 117
 4e6:	31 f4       	brne	.+12     	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 4e8:	23 2d       	mov	r18, r3
 4ea:	2f 7e       	andi	r18, 0xEF	; 239
 4ec:	b2 2e       	mov	r11, r18
 4ee:	2a e0       	ldi	r18, 0x0A	; 10
 4f0:	30 e0       	ldi	r19, 0x00	; 0
 4f2:	25 c0       	rjmp	.+74     	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 4f4:	93 2d       	mov	r25, r3
 4f6:	99 7f       	andi	r25, 0xF9	; 249
 4f8:	b9 2e       	mov	r11, r25
 4fa:	8f 36       	cpi	r24, 0x6F	; 111
 4fc:	c1 f0       	breq	.+48     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 4fe:	18 f4       	brcc	.+6      	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 500:	88 35       	cpi	r24, 0x58	; 88
 502:	79 f0       	breq	.+30     	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 504:	b5 c0       	rjmp	.+362    	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
 506:	80 37       	cpi	r24, 0x70	; 112
 508:	19 f0       	breq	.+6      	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 50a:	88 37       	cpi	r24, 0x78	; 120
 50c:	21 f0       	breq	.+8      	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 50e:	b0 c0       	rjmp	.+352    	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
 510:	e9 2f       	mov	r30, r25
 512:	e0 61       	ori	r30, 0x10	; 16
 514:	be 2e       	mov	r11, r30
 516:	b4 fe       	sbrs	r11, 4
 518:	0d c0       	rjmp	.+26     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 51a:	fb 2d       	mov	r31, r11
 51c:	f4 60       	ori	r31, 0x04	; 4
 51e:	bf 2e       	mov	r11, r31
 520:	09 c0       	rjmp	.+18     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 522:	34 fe       	sbrs	r3, 4
 524:	0a c0       	rjmp	.+20     	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 526:	29 2f       	mov	r18, r25
 528:	26 60       	ori	r18, 0x06	; 6
 52a:	b2 2e       	mov	r11, r18
 52c:	06 c0       	rjmp	.+12     	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 52e:	28 e0       	ldi	r18, 0x08	; 8
 530:	30 e0       	ldi	r19, 0x00	; 0
 532:	05 c0       	rjmp	.+10     	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 534:	20 e1       	ldi	r18, 0x10	; 16
 536:	30 e0       	ldi	r19, 0x00	; 0
 538:	02 c0       	rjmp	.+4      	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 53a:	20 e1       	ldi	r18, 0x10	; 16
 53c:	32 e0       	ldi	r19, 0x02	; 2
 53e:	f8 01       	movw	r30, r16
 540:	b7 fe       	sbrs	r11, 7
 542:	07 c0       	rjmp	.+14     	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 544:	60 81       	ld	r22, Z
 546:	71 81       	ldd	r23, Z+1	; 0x01
 548:	82 81       	ldd	r24, Z+2	; 0x02
 54a:	93 81       	ldd	r25, Z+3	; 0x03
 54c:	0c 5f       	subi	r16, 0xFC	; 252
 54e:	1f 4f       	sbci	r17, 0xFF	; 255
 550:	06 c0       	rjmp	.+12     	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 552:	60 81       	ld	r22, Z
 554:	71 81       	ldd	r23, Z+1	; 0x01
 556:	80 e0       	ldi	r24, 0x00	; 0
 558:	90 e0       	ldi	r25, 0x00	; 0
 55a:	0e 5f       	subi	r16, 0xFE	; 254
 55c:	1f 4f       	sbci	r17, 0xFF	; 255
 55e:	a3 01       	movw	r20, r6
 560:	0e 94 94 03 	call	0x728	; 0x728 <__ultoa_invert>
 564:	88 2e       	mov	r8, r24
 566:	86 18       	sub	r8, r6
 568:	fb 2d       	mov	r31, r11
 56a:	ff 77       	andi	r31, 0x7F	; 127
 56c:	3f 2e       	mov	r3, r31
 56e:	36 fe       	sbrs	r3, 6
 570:	0d c0       	rjmp	.+26     	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 572:	23 2d       	mov	r18, r3
 574:	2e 7f       	andi	r18, 0xFE	; 254
 576:	a2 2e       	mov	r10, r18
 578:	89 14       	cp	r8, r9
 57a:	58 f4       	brcc	.+22     	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 57c:	34 fe       	sbrs	r3, 4
 57e:	0b c0       	rjmp	.+22     	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 580:	32 fc       	sbrc	r3, 2
 582:	09 c0       	rjmp	.+18     	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 584:	83 2d       	mov	r24, r3
 586:	8e 7e       	andi	r24, 0xEE	; 238
 588:	a8 2e       	mov	r10, r24
 58a:	05 c0       	rjmp	.+10     	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 58c:	b8 2c       	mov	r11, r8
 58e:	a3 2c       	mov	r10, r3
 590:	03 c0       	rjmp	.+6      	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 592:	b8 2c       	mov	r11, r8
 594:	01 c0       	rjmp	.+2      	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 596:	b9 2c       	mov	r11, r9
 598:	a4 fe       	sbrs	r10, 4
 59a:	0f c0       	rjmp	.+30     	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
 59c:	fe 01       	movw	r30, r28
 59e:	e8 0d       	add	r30, r8
 5a0:	f1 1d       	adc	r31, r1
 5a2:	80 81       	ld	r24, Z
 5a4:	80 33       	cpi	r24, 0x30	; 48
 5a6:	21 f4       	brne	.+8      	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5a8:	9a 2d       	mov	r25, r10
 5aa:	99 7e       	andi	r25, 0xE9	; 233
 5ac:	a9 2e       	mov	r10, r25
 5ae:	09 c0       	rjmp	.+18     	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
 5b0:	a2 fe       	sbrs	r10, 2
 5b2:	06 c0       	rjmp	.+12     	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 5b4:	b3 94       	inc	r11
 5b6:	b3 94       	inc	r11
 5b8:	04 c0       	rjmp	.+8      	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
 5ba:	8a 2d       	mov	r24, r10
 5bc:	86 78       	andi	r24, 0x86	; 134
 5be:	09 f0       	breq	.+2      	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
 5c0:	b3 94       	inc	r11
 5c2:	a3 fc       	sbrc	r10, 3
 5c4:	11 c0       	rjmp	.+34     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5c6:	a0 fe       	sbrs	r10, 0
 5c8:	06 c0       	rjmp	.+12     	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5ca:	b2 14       	cp	r11, r2
 5cc:	88 f4       	brcc	.+34     	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 5ce:	28 0c       	add	r2, r8
 5d0:	92 2c       	mov	r9, r2
 5d2:	9b 18       	sub	r9, r11
 5d4:	0e c0       	rjmp	.+28     	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
 5d6:	b2 14       	cp	r11, r2
 5d8:	60 f4       	brcc	.+24     	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
 5da:	b6 01       	movw	r22, r12
 5dc:	80 e2       	ldi	r24, 0x20	; 32
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	0e 94 58 03 	call	0x6b0	; 0x6b0 <fputc>
 5e4:	b3 94       	inc	r11
 5e6:	f7 cf       	rjmp	.-18     	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5e8:	b2 14       	cp	r11, r2
 5ea:	18 f4       	brcc	.+6      	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
 5ec:	2b 18       	sub	r2, r11
 5ee:	02 c0       	rjmp	.+4      	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5f0:	98 2c       	mov	r9, r8
 5f2:	21 2c       	mov	r2, r1
 5f4:	a4 fe       	sbrs	r10, 4
 5f6:	10 c0       	rjmp	.+32     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 5f8:	b6 01       	movw	r22, r12
 5fa:	80 e3       	ldi	r24, 0x30	; 48
 5fc:	90 e0       	ldi	r25, 0x00	; 0
 5fe:	0e 94 58 03 	call	0x6b0	; 0x6b0 <fputc>
 602:	a2 fe       	sbrs	r10, 2
 604:	17 c0       	rjmp	.+46     	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
 606:	a1 fc       	sbrc	r10, 1
 608:	03 c0       	rjmp	.+6      	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 60a:	88 e7       	ldi	r24, 0x78	; 120
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	02 c0       	rjmp	.+4      	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 610:	88 e5       	ldi	r24, 0x58	; 88
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	b6 01       	movw	r22, r12
 616:	0c c0       	rjmp	.+24     	; 0x630 <__LOCK_REGION_LENGTH__+0x230>
 618:	8a 2d       	mov	r24, r10
 61a:	86 78       	andi	r24, 0x86	; 134
 61c:	59 f0       	breq	.+22     	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
 61e:	a1 fe       	sbrs	r10, 1
 620:	02 c0       	rjmp	.+4      	; 0x626 <__LOCK_REGION_LENGTH__+0x226>
 622:	8b e2       	ldi	r24, 0x2B	; 43
 624:	01 c0       	rjmp	.+2      	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 626:	80 e2       	ldi	r24, 0x20	; 32
 628:	a7 fc       	sbrc	r10, 7
 62a:	8d e2       	ldi	r24, 0x2D	; 45
 62c:	b6 01       	movw	r22, r12
 62e:	90 e0       	ldi	r25, 0x00	; 0
 630:	0e 94 58 03 	call	0x6b0	; 0x6b0 <fputc>
 634:	89 14       	cp	r8, r9
 636:	38 f4       	brcc	.+14     	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 638:	b6 01       	movw	r22, r12
 63a:	80 e3       	ldi	r24, 0x30	; 48
 63c:	90 e0       	ldi	r25, 0x00	; 0
 63e:	0e 94 58 03 	call	0x6b0	; 0x6b0 <fputc>
 642:	9a 94       	dec	r9
 644:	f7 cf       	rjmp	.-18     	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
 646:	8a 94       	dec	r8
 648:	f3 01       	movw	r30, r6
 64a:	e8 0d       	add	r30, r8
 64c:	f1 1d       	adc	r31, r1
 64e:	80 81       	ld	r24, Z
 650:	b6 01       	movw	r22, r12
 652:	90 e0       	ldi	r25, 0x00	; 0
 654:	0e 94 58 03 	call	0x6b0	; 0x6b0 <fputc>
 658:	81 10       	cpse	r8, r1
 65a:	f5 cf       	rjmp	.-22     	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 65c:	22 20       	and	r2, r2
 65e:	09 f4       	brne	.+2      	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
 660:	42 ce       	rjmp	.-892    	; 0x2e6 <vfprintf+0x24>
 662:	b6 01       	movw	r22, r12
 664:	80 e2       	ldi	r24, 0x20	; 32
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	0e 94 58 03 	call	0x6b0	; 0x6b0 <fputc>
 66c:	2a 94       	dec	r2
 66e:	f6 cf       	rjmp	.-20     	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 670:	f6 01       	movw	r30, r12
 672:	86 81       	ldd	r24, Z+6	; 0x06
 674:	97 81       	ldd	r25, Z+7	; 0x07
 676:	02 c0       	rjmp	.+4      	; 0x67c <__LOCK_REGION_LENGTH__+0x27c>
 678:	8f ef       	ldi	r24, 0xFF	; 255
 67a:	9f ef       	ldi	r25, 0xFF	; 255
 67c:	2b 96       	adiw	r28, 0x0b	; 11
 67e:	e2 e1       	ldi	r30, 0x12	; 18
 680:	0c 94 0e 04 	jmp	0x81c	; 0x81c <__epilogue_restores__>

00000684 <strnlen_P>:
 684:	fc 01       	movw	r30, r24
 686:	05 90       	lpm	r0, Z+
 688:	61 50       	subi	r22, 0x01	; 1
 68a:	70 40       	sbci	r23, 0x00	; 0
 68c:	01 10       	cpse	r0, r1
 68e:	d8 f7       	brcc	.-10     	; 0x686 <strnlen_P+0x2>
 690:	80 95       	com	r24
 692:	90 95       	com	r25
 694:	8e 0f       	add	r24, r30
 696:	9f 1f       	adc	r25, r31
 698:	08 95       	ret

0000069a <strnlen>:
 69a:	fc 01       	movw	r30, r24
 69c:	61 50       	subi	r22, 0x01	; 1
 69e:	70 40       	sbci	r23, 0x00	; 0
 6a0:	01 90       	ld	r0, Z+
 6a2:	01 10       	cpse	r0, r1
 6a4:	d8 f7       	brcc	.-10     	; 0x69c <strnlen+0x2>
 6a6:	80 95       	com	r24
 6a8:	90 95       	com	r25
 6aa:	8e 0f       	add	r24, r30
 6ac:	9f 1f       	adc	r25, r31
 6ae:	08 95       	ret

000006b0 <fputc>:
 6b0:	0f 93       	push	r16
 6b2:	1f 93       	push	r17
 6b4:	cf 93       	push	r28
 6b6:	df 93       	push	r29
 6b8:	fb 01       	movw	r30, r22
 6ba:	23 81       	ldd	r18, Z+3	; 0x03
 6bc:	21 fd       	sbrc	r18, 1
 6be:	03 c0       	rjmp	.+6      	; 0x6c6 <fputc+0x16>
 6c0:	8f ef       	ldi	r24, 0xFF	; 255
 6c2:	9f ef       	ldi	r25, 0xFF	; 255
 6c4:	2c c0       	rjmp	.+88     	; 0x71e <fputc+0x6e>
 6c6:	22 ff       	sbrs	r18, 2
 6c8:	16 c0       	rjmp	.+44     	; 0x6f6 <fputc+0x46>
 6ca:	46 81       	ldd	r20, Z+6	; 0x06
 6cc:	57 81       	ldd	r21, Z+7	; 0x07
 6ce:	24 81       	ldd	r18, Z+4	; 0x04
 6d0:	35 81       	ldd	r19, Z+5	; 0x05
 6d2:	42 17       	cp	r20, r18
 6d4:	53 07       	cpc	r21, r19
 6d6:	44 f4       	brge	.+16     	; 0x6e8 <fputc+0x38>
 6d8:	a0 81       	ld	r26, Z
 6da:	b1 81       	ldd	r27, Z+1	; 0x01
 6dc:	9d 01       	movw	r18, r26
 6de:	2f 5f       	subi	r18, 0xFF	; 255
 6e0:	3f 4f       	sbci	r19, 0xFF	; 255
 6e2:	31 83       	std	Z+1, r19	; 0x01
 6e4:	20 83       	st	Z, r18
 6e6:	8c 93       	st	X, r24
 6e8:	26 81       	ldd	r18, Z+6	; 0x06
 6ea:	37 81       	ldd	r19, Z+7	; 0x07
 6ec:	2f 5f       	subi	r18, 0xFF	; 255
 6ee:	3f 4f       	sbci	r19, 0xFF	; 255
 6f0:	37 83       	std	Z+7, r19	; 0x07
 6f2:	26 83       	std	Z+6, r18	; 0x06
 6f4:	14 c0       	rjmp	.+40     	; 0x71e <fputc+0x6e>
 6f6:	8b 01       	movw	r16, r22
 6f8:	ec 01       	movw	r28, r24
 6fa:	fb 01       	movw	r30, r22
 6fc:	00 84       	ldd	r0, Z+8	; 0x08
 6fe:	f1 85       	ldd	r31, Z+9	; 0x09
 700:	e0 2d       	mov	r30, r0
 702:	09 95       	icall
 704:	89 2b       	or	r24, r25
 706:	e1 f6       	brne	.-72     	; 0x6c0 <fputc+0x10>
 708:	d8 01       	movw	r26, r16
 70a:	16 96       	adiw	r26, 0x06	; 6
 70c:	8d 91       	ld	r24, X+
 70e:	9c 91       	ld	r25, X
 710:	17 97       	sbiw	r26, 0x07	; 7
 712:	01 96       	adiw	r24, 0x01	; 1
 714:	17 96       	adiw	r26, 0x07	; 7
 716:	9c 93       	st	X, r25
 718:	8e 93       	st	-X, r24
 71a:	16 97       	sbiw	r26, 0x06	; 6
 71c:	ce 01       	movw	r24, r28
 71e:	df 91       	pop	r29
 720:	cf 91       	pop	r28
 722:	1f 91       	pop	r17
 724:	0f 91       	pop	r16
 726:	08 95       	ret

00000728 <__ultoa_invert>:
 728:	fa 01       	movw	r30, r20
 72a:	aa 27       	eor	r26, r26
 72c:	28 30       	cpi	r18, 0x08	; 8
 72e:	51 f1       	breq	.+84     	; 0x784 <__ultoa_invert+0x5c>
 730:	20 31       	cpi	r18, 0x10	; 16
 732:	81 f1       	breq	.+96     	; 0x794 <__ultoa_invert+0x6c>
 734:	e8 94       	clt
 736:	6f 93       	push	r22
 738:	6e 7f       	andi	r22, 0xFE	; 254
 73a:	6e 5f       	subi	r22, 0xFE	; 254
 73c:	7f 4f       	sbci	r23, 0xFF	; 255
 73e:	8f 4f       	sbci	r24, 0xFF	; 255
 740:	9f 4f       	sbci	r25, 0xFF	; 255
 742:	af 4f       	sbci	r26, 0xFF	; 255
 744:	b1 e0       	ldi	r27, 0x01	; 1
 746:	3e d0       	rcall	.+124    	; 0x7c4 <__ultoa_invert+0x9c>
 748:	b4 e0       	ldi	r27, 0x04	; 4
 74a:	3c d0       	rcall	.+120    	; 0x7c4 <__ultoa_invert+0x9c>
 74c:	67 0f       	add	r22, r23
 74e:	78 1f       	adc	r23, r24
 750:	89 1f       	adc	r24, r25
 752:	9a 1f       	adc	r25, r26
 754:	a1 1d       	adc	r26, r1
 756:	68 0f       	add	r22, r24
 758:	79 1f       	adc	r23, r25
 75a:	8a 1f       	adc	r24, r26
 75c:	91 1d       	adc	r25, r1
 75e:	a1 1d       	adc	r26, r1
 760:	6a 0f       	add	r22, r26
 762:	71 1d       	adc	r23, r1
 764:	81 1d       	adc	r24, r1
 766:	91 1d       	adc	r25, r1
 768:	a1 1d       	adc	r26, r1
 76a:	20 d0       	rcall	.+64     	; 0x7ac <__ultoa_invert+0x84>
 76c:	09 f4       	brne	.+2      	; 0x770 <__ultoa_invert+0x48>
 76e:	68 94       	set
 770:	3f 91       	pop	r19
 772:	2a e0       	ldi	r18, 0x0A	; 10
 774:	26 9f       	mul	r18, r22
 776:	11 24       	eor	r1, r1
 778:	30 19       	sub	r19, r0
 77a:	30 5d       	subi	r19, 0xD0	; 208
 77c:	31 93       	st	Z+, r19
 77e:	de f6       	brtc	.-74     	; 0x736 <__ultoa_invert+0xe>
 780:	cf 01       	movw	r24, r30
 782:	08 95       	ret
 784:	46 2f       	mov	r20, r22
 786:	47 70       	andi	r20, 0x07	; 7
 788:	40 5d       	subi	r20, 0xD0	; 208
 78a:	41 93       	st	Z+, r20
 78c:	b3 e0       	ldi	r27, 0x03	; 3
 78e:	0f d0       	rcall	.+30     	; 0x7ae <__ultoa_invert+0x86>
 790:	c9 f7       	brne	.-14     	; 0x784 <__ultoa_invert+0x5c>
 792:	f6 cf       	rjmp	.-20     	; 0x780 <__ultoa_invert+0x58>
 794:	46 2f       	mov	r20, r22
 796:	4f 70       	andi	r20, 0x0F	; 15
 798:	40 5d       	subi	r20, 0xD0	; 208
 79a:	4a 33       	cpi	r20, 0x3A	; 58
 79c:	18 f0       	brcs	.+6      	; 0x7a4 <__ultoa_invert+0x7c>
 79e:	49 5d       	subi	r20, 0xD9	; 217
 7a0:	31 fd       	sbrc	r19, 1
 7a2:	40 52       	subi	r20, 0x20	; 32
 7a4:	41 93       	st	Z+, r20
 7a6:	02 d0       	rcall	.+4      	; 0x7ac <__ultoa_invert+0x84>
 7a8:	a9 f7       	brne	.-22     	; 0x794 <__ultoa_invert+0x6c>
 7aa:	ea cf       	rjmp	.-44     	; 0x780 <__ultoa_invert+0x58>
 7ac:	b4 e0       	ldi	r27, 0x04	; 4
 7ae:	a6 95       	lsr	r26
 7b0:	97 95       	ror	r25
 7b2:	87 95       	ror	r24
 7b4:	77 95       	ror	r23
 7b6:	67 95       	ror	r22
 7b8:	ba 95       	dec	r27
 7ba:	c9 f7       	brne	.-14     	; 0x7ae <__ultoa_invert+0x86>
 7bc:	00 97       	sbiw	r24, 0x00	; 0
 7be:	61 05       	cpc	r22, r1
 7c0:	71 05       	cpc	r23, r1
 7c2:	08 95       	ret
 7c4:	9b 01       	movw	r18, r22
 7c6:	ac 01       	movw	r20, r24
 7c8:	0a 2e       	mov	r0, r26
 7ca:	06 94       	lsr	r0
 7cc:	57 95       	ror	r21
 7ce:	47 95       	ror	r20
 7d0:	37 95       	ror	r19
 7d2:	27 95       	ror	r18
 7d4:	ba 95       	dec	r27
 7d6:	c9 f7       	brne	.-14     	; 0x7ca <__ultoa_invert+0xa2>
 7d8:	62 0f       	add	r22, r18
 7da:	73 1f       	adc	r23, r19
 7dc:	84 1f       	adc	r24, r20
 7de:	95 1f       	adc	r25, r21
 7e0:	a0 1d       	adc	r26, r0
 7e2:	08 95       	ret

000007e4 <__prologue_saves__>:
 7e4:	2f 92       	push	r2
 7e6:	3f 92       	push	r3
 7e8:	4f 92       	push	r4
 7ea:	5f 92       	push	r5
 7ec:	6f 92       	push	r6
 7ee:	7f 92       	push	r7
 7f0:	8f 92       	push	r8
 7f2:	9f 92       	push	r9
 7f4:	af 92       	push	r10
 7f6:	bf 92       	push	r11
 7f8:	cf 92       	push	r12
 7fa:	df 92       	push	r13
 7fc:	ef 92       	push	r14
 7fe:	ff 92       	push	r15
 800:	0f 93       	push	r16
 802:	1f 93       	push	r17
 804:	cf 93       	push	r28
 806:	df 93       	push	r29
 808:	cd b7       	in	r28, 0x3d	; 61
 80a:	de b7       	in	r29, 0x3e	; 62
 80c:	ca 1b       	sub	r28, r26
 80e:	db 0b       	sbc	r29, r27
 810:	0f b6       	in	r0, 0x3f	; 63
 812:	f8 94       	cli
 814:	de bf       	out	0x3e, r29	; 62
 816:	0f be       	out	0x3f, r0	; 63
 818:	cd bf       	out	0x3d, r28	; 61
 81a:	09 94       	ijmp

0000081c <__epilogue_restores__>:
 81c:	2a 88       	ldd	r2, Y+18	; 0x12
 81e:	39 88       	ldd	r3, Y+17	; 0x11
 820:	48 88       	ldd	r4, Y+16	; 0x10
 822:	5f 84       	ldd	r5, Y+15	; 0x0f
 824:	6e 84       	ldd	r6, Y+14	; 0x0e
 826:	7d 84       	ldd	r7, Y+13	; 0x0d
 828:	8c 84       	ldd	r8, Y+12	; 0x0c
 82a:	9b 84       	ldd	r9, Y+11	; 0x0b
 82c:	aa 84       	ldd	r10, Y+10	; 0x0a
 82e:	b9 84       	ldd	r11, Y+9	; 0x09
 830:	c8 84       	ldd	r12, Y+8	; 0x08
 832:	df 80       	ldd	r13, Y+7	; 0x07
 834:	ee 80       	ldd	r14, Y+6	; 0x06
 836:	fd 80       	ldd	r15, Y+5	; 0x05
 838:	0c 81       	ldd	r16, Y+4	; 0x04
 83a:	1b 81       	ldd	r17, Y+3	; 0x03
 83c:	aa 81       	ldd	r26, Y+2	; 0x02
 83e:	b9 81       	ldd	r27, Y+1	; 0x01
 840:	ce 0f       	add	r28, r30
 842:	d1 1d       	adc	r29, r1
 844:	0f b6       	in	r0, 0x3f	; 63
 846:	f8 94       	cli
 848:	de bf       	out	0x3e, r29	; 62
 84a:	0f be       	out	0x3f, r0	; 63
 84c:	cd bf       	out	0x3d, r28	; 61
 84e:	ed 01       	movw	r28, r26
 850:	08 95       	ret

00000852 <_exit>:
 852:	f8 94       	cli

00000854 <__stop_program>:
 854:	ff cf       	rjmp	.-2      	; 0x854 <__stop_program>
