
midterm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000b8  00800100  0000094a  000009de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000094a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000020  008001b8  008001b8  00000a96  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a96  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000af4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000b30  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009a8  00000000  00000000  00000b70  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000737  00000000  00000000  00001518  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000041f  00000000  00000000  00001c4f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e0  00000000  00000000  00002070  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003ec  00000000  00000000  00002150  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000302  00000000  00000000  0000253c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  0000283e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e4       	ldi	r30, 0x4A	; 74
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 3b       	cpi	r26, 0xB8	; 184
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a8 eb       	ldi	r26, 0xB8	; 184
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a8 3d       	cpi	r26, 0xD8	; 216
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 bc 00 	call	0x178	; 0x178 <main>
  9e:	0c 94 a3 04 	jmp	0x946	; 0x946 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <adc_init>:
}

void adc_init(void)
{
	/** Setup and enable ADC **/
	ADMUX = 0;				//select ADC0 Pin as input
  a6:	ec e7       	ldi	r30, 0x7C	; 124
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	10 82       	st	Z, r1
	ADMUX = (0<<REFS1)| 	//Reference Selection Bits
  ac:	80 e6       	ldi	r24, 0x60	; 96
  ae:	80 83       	st	Z, r24
	(1<<REFS0)| 			//AVcc - external cap at AREF
	(1<<ADLAR); 			//ADC left Adjust Result
	
	ADCSRA = (1<<ADEN)| 	//ADC ENable
  b0:	86 ee       	ldi	r24, 0xE6	; 230
  b2:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
  b6:	08 95       	ret

000000b8 <read_adc>:

/* READ ADC PINS*/
void read_adc(void)
{
	unsigned char i = 4;					//set for 4 ADC reads
	adc_temp = 0;							//initialize temp to 0
  b8:	10 92 d7 01 	sts	0x01D7, r1	; 0x8001d7 <adc_temp+0x1>
  bc:	10 92 d6 01 	sts	0x01D6, r1	; 0x8001d6 <adc_temp>
  c0:	44 e0       	ldi	r20, 0x04	; 4
	while (i--)
	{
		ADCSRA |= (1<<ADSC);				//start the conversion
  c2:	ea e7       	ldi	r30, 0x7A	; 122
  c4:	f0 e0       	ldi	r31, 0x00	; 0
		while((ADCSRA & (1<<ADIF)) == 0);	//wait for conversion to finish
		adc_temp += ADCH*2;					//get temp value
  c6:	a9 e7       	ldi	r26, 0x79	; 121
  c8:	b0 e0       	ldi	r27, 0x00	; 0
{
	unsigned char i = 4;					//set for 4 ADC reads
	adc_temp = 0;							//initialize temp to 0
	while (i--)
	{
		ADCSRA |= (1<<ADSC);				//start the conversion
  ca:	80 81       	ld	r24, Z
  cc:	80 64       	ori	r24, 0x40	; 64
  ce:	80 83       	st	Z, r24
		while((ADCSRA & (1<<ADIF)) == 0);	//wait for conversion to finish
  d0:	80 81       	ld	r24, Z
  d2:	84 ff       	sbrs	r24, 4
  d4:	fd cf       	rjmp	.-6      	; 0xd0 <read_adc+0x18>
		adc_temp += ADCH*2;					//get temp value
  d6:	9c 91       	ld	r25, X
  d8:	20 91 d6 01 	lds	r18, 0x01D6	; 0x8001d6 <adc_temp>
  dc:	30 91 d7 01 	lds	r19, 0x01D7	; 0x8001d7 <adc_temp+0x1>
  e0:	89 2f       	mov	r24, r25
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	88 0f       	add	r24, r24
  e6:	99 1f       	adc	r25, r25
  e8:	82 0f       	add	r24, r18
  ea:	93 1f       	adc	r25, r19
  ec:	90 93 d7 01 	sts	0x01D7, r25	; 0x8001d7 <adc_temp+0x1>
  f0:	80 93 d6 01 	sts	0x01D6, r24	; 0x8001d6 <adc_temp>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f4:	2f e7       	ldi	r18, 0x7F	; 127
  f6:	88 e3       	ldi	r24, 0x38	; 56
  f8:	91 e0       	ldi	r25, 0x01	; 1
  fa:	21 50       	subi	r18, 0x01	; 1
  fc:	80 40       	sbci	r24, 0x00	; 0
  fe:	90 40       	sbci	r25, 0x00	; 0
 100:	e1 f7       	brne	.-8      	; 0xfa <read_adc+0x42>
 102:	00 c0       	rjmp	.+0      	; 0x104 <read_adc+0x4c>
 104:	00 00       	nop
 106:	41 50       	subi	r20, 0x01	; 1
/* READ ADC PINS*/
void read_adc(void)
{
	unsigned char i = 4;					//set for 4 ADC reads
	adc_temp = 0;							//initialize temp to 0
	while (i--)
 108:	01 f7       	brne	.-64     	; 0xca <read_adc+0x12>
		ADCSRA |= (1<<ADSC);				//start the conversion
		while((ADCSRA & (1<<ADIF)) == 0);	//wait for conversion to finish
		adc_temp += ADCH*2;					//get temp value
		_delay_ms(50);						//wait a bit
	}
	adc_temp = adc_temp / 4; 				// Average a few samples
 10a:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <adc_temp>
 10e:	90 91 d7 01 	lds	r25, 0x01D7	; 0x8001d7 <adc_temp+0x1>
 112:	96 95       	lsr	r25
 114:	87 95       	ror	r24
 116:	96 95       	lsr	r25
 118:	87 95       	ror	r24
 11a:	90 93 d7 01 	sts	0x01D7, r25	; 0x8001d7 <adc_temp+0x1>
 11e:	80 93 d6 01 	sts	0x01D6, r24	; 0x8001d6 <adc_temp>
 122:	08 95       	ret

00000124 <USART_init>:
}

/* INIT USART (RS-232) */
void USART_init( unsigned int ubrr )
{
	UBRR0H = (unsigned char)(ubrr>>8);			//set baud rate
 124:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char)ubrr;
 128:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B = (1 << TXEN0) | (1 <<RXEN0); 		// Enable receiver, transmitter
 12c:	88 e1       	ldi	r24, 0x18	; 24
 12e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = (1 << UCSZ00) | (1 << UCSZ01); 	//asynchronous 8-bit data 1 stop bit
 132:	86 e0       	ldi	r24, 0x06	; 6
 134:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 138:	08 95       	ret

0000013a <USART_tx_string>:
}

/* SEND A STRING TO THE RS-232*/
void USART_tx_string( char *data )
{
 13a:	cf 93       	push	r28
 13c:	df 93       	push	r29
	while ((*data != '\0'))
 13e:	fc 01       	movw	r30, r24
 140:	20 81       	ld	r18, Z
 142:	22 23       	and	r18, r18
 144:	b1 f0       	breq	.+44     	; 0x172 <USART_tx_string+0x38>
 146:	dc 01       	movw	r26, r24
 148:	11 96       	adiw	r26, 0x01	; 1
	{
		while (!(UCSR0A & (1 <<UDRE0)));	//wait for the transmit buffer to empty
 14a:	e0 ec       	ldi	r30, 0xC0	; 192
 14c:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0 = *data;						//put the data into the empty buffer, which sends the data
 14e:	c6 ec       	ldi	r28, 0xC6	; 198
 150:	d0 e0       	ldi	r29, 0x00	; 0
/* SEND A STRING TO THE RS-232*/
void USART_tx_string( char *data )
{
	while ((*data != '\0'))
	{
		while (!(UCSR0A & (1 <<UDRE0)));	//wait for the transmit buffer to empty
 152:	90 81       	ld	r25, Z
 154:	95 ff       	sbrs	r25, 5
 156:	fd cf       	rjmp	.-6      	; 0x152 <USART_tx_string+0x18>
		UDR0 = *data;						//put the data into the empty buffer, which sends the data
 158:	28 83       	st	Y, r18
 15a:	2f e3       	ldi	r18, 0x3F	; 63
 15c:	8d e0       	ldi	r24, 0x0D	; 13
 15e:	93 e0       	ldi	r25, 0x03	; 3
 160:	21 50       	subi	r18, 0x01	; 1
 162:	80 40       	sbci	r24, 0x00	; 0
 164:	90 40       	sbci	r25, 0x00	; 0
 166:	e1 f7       	brne	.-8      	; 0x160 <USART_tx_string+0x26>
 168:	00 c0       	rjmp	.+0      	; 0x16a <USART_tx_string+0x30>
 16a:	00 00       	nop
}

/* SEND A STRING TO THE RS-232*/
void USART_tx_string( char *data )
{
	while ((*data != '\0'))
 16c:	2d 91       	ld	r18, X+
 16e:	21 11       	cpse	r18, r1
 170:	f0 cf       	rjmp	.-32     	; 0x152 <USART_tx_string+0x18>
		while (!(UCSR0A & (1 <<UDRE0)));	//wait for the transmit buffer to empty
		UDR0 = *data;						//put the data into the empty buffer, which sends the data
		_delay_ms(125); 					// wait a bit
		data++;
	}
}
 172:	df 91       	pop	r29
 174:	cf 91       	pop	r28
 176:	08 95       	ret

00000178 <main>:
char outs[30];


int main(void)
{
	adc_init(); 						//Initialize the ADC (Analog / Digital Converter)
 178:	0e 94 53 00 	call	0xa6	; 0xa6 <adc_init>
	USART_init(UBRR_115200); 			//Initialize the USART (RS232 interface)
 17c:	83 e0       	ldi	r24, 0x03	; 3
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	0e 94 92 00 	call	0x124	; 0x124 <USART_init>
 184:	2f e3       	ldi	r18, 0x3F	; 63
 186:	3d e0       	ldi	r19, 0x0D	; 13
 188:	83 e0       	ldi	r24, 0x03	; 3
 18a:	21 50       	subi	r18, 0x01	; 1
 18c:	30 40       	sbci	r19, 0x00	; 0
 18e:	80 40       	sbci	r24, 0x00	; 0
 190:	e1 f7       	brne	.-8      	; 0x18a <main+0x12>
 192:	00 c0       	rjmp	.+0      	; 0x194 <main+0x1c>
 194:	00 00       	nop
	_delay_ms(125); 					//wait a bit
	snprintf(outs,sizeof(outs),"AT\r\n");
 196:	c8 eb       	ldi	r28, 0xB8	; 184
 198:	d1 e0       	ldi	r29, 0x01	; 1
 19a:	85 e0       	ldi	r24, 0x05	; 5
 19c:	e0 e0       	ldi	r30, 0x00	; 0
 19e:	f1 e0       	ldi	r31, 0x01	; 1
 1a0:	de 01       	movw	r26, r28
 1a2:	01 90       	ld	r0, Z+
 1a4:	0d 92       	st	X+, r0
 1a6:	8a 95       	dec	r24
 1a8:	e1 f7       	brne	.-8      	; 0x1a2 <main+0x2a>
	USART_tx_string(outs);
 1aa:	ce 01       	movw	r24, r28
 1ac:	0e 94 9d 00 	call	0x13a	; 0x13a <USART_tx_string>
 1b0:	9f ef       	ldi	r25, 0xFF	; 255
 1b2:	23 ed       	ldi	r18, 0xD3	; 211
 1b4:	30 e3       	ldi	r19, 0x30	; 48
 1b6:	91 50       	subi	r25, 0x01	; 1
 1b8:	20 40       	sbci	r18, 0x00	; 0
 1ba:	30 40       	sbci	r19, 0x00	; 0
 1bc:	e1 f7       	brne	.-8      	; 0x1b6 <main+0x3e>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <main+0x48>
 1c0:	00 00       	nop
	_delay_ms(2000);
	snprintf(outs,sizeof(outs),"AT+CWMODE=3\r\n");  //wifi mode
 1c2:	8e e0       	ldi	r24, 0x0E	; 14
 1c4:	e5 e0       	ldi	r30, 0x05	; 5
 1c6:	f1 e0       	ldi	r31, 0x01	; 1
 1c8:	de 01       	movw	r26, r28
 1ca:	01 90       	ld	r0, Z+
 1cc:	0d 92       	st	X+, r0
 1ce:	8a 95       	dec	r24
 1d0:	e1 f7       	brne	.-8      	; 0x1ca <main+0x52>
	USART_tx_string(outs);
 1d2:	ce 01       	movw	r24, r28
 1d4:	0e 94 9d 00 	call	0x13a	; 0x13a <USART_tx_string>
 1d8:	8f ef       	ldi	r24, 0xFF	; 255
 1da:	93 ed       	ldi	r25, 0xD3	; 211
 1dc:	20 e3       	ldi	r18, 0x30	; 48
 1de:	81 50       	subi	r24, 0x01	; 1
 1e0:	90 40       	sbci	r25, 0x00	; 0
 1e2:	20 40       	sbci	r18, 0x00	; 0
 1e4:	e1 f7       	brne	.-8      	; 0x1de <main+0x66>
 1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <main+0x70>
 1e8:	00 00       	nop
	_delay_ms(2000);
	snprintf(outs,sizeof(outs),"AT+CIPMUX=0\r\n");	//single connection
 1ea:	8e e0       	ldi	r24, 0x0E	; 14
 1ec:	e3 e1       	ldi	r30, 0x13	; 19
 1ee:	f1 e0       	ldi	r31, 0x01	; 1
 1f0:	de 01       	movw	r26, r28
 1f2:	01 90       	ld	r0, Z+
 1f4:	0d 92       	st	X+, r0
 1f6:	8a 95       	dec	r24
 1f8:	e1 f7       	brne	.-8      	; 0x1f2 <main+0x7a>
	USART_tx_string(outs);
 1fa:	ce 01       	movw	r24, r28
 1fc:	0e 94 9d 00 	call	0x13a	; 0x13a <USART_tx_string>
 200:	3f ef       	ldi	r19, 0xFF	; 255
 202:	83 ed       	ldi	r24, 0xD3	; 211
 204:	90 e3       	ldi	r25, 0x30	; 48
 206:	31 50       	subi	r19, 0x01	; 1
 208:	80 40       	sbci	r24, 0x00	; 0
 20a:	90 40       	sbci	r25, 0x00	; 0
 20c:	e1 f7       	brne	.-8      	; 0x206 <main+0x8e>
 20e:	00 c0       	rjmp	.+0      	; 0x210 <main+0x98>
 210:	00 00       	nop
	_delay_ms(2000);
	snprintf(outs,sizeof(outs),"AT+CIPMODE=0\r\n");	//normal mode
 212:	8f e0       	ldi	r24, 0x0F	; 15
 214:	e1 e2       	ldi	r30, 0x21	; 33
 216:	f1 e0       	ldi	r31, 0x01	; 1
 218:	de 01       	movw	r26, r28
 21a:	01 90       	ld	r0, Z+
 21c:	0d 92       	st	X+, r0
 21e:	8a 95       	dec	r24
 220:	e1 f7       	brne	.-8      	; 0x21a <main+0xa2>
	USART_tx_string(outs);
 222:	ce 01       	movw	r24, r28
 224:	0e 94 9d 00 	call	0x13a	; 0x13a <USART_tx_string>
 228:	2f ef       	ldi	r18, 0xFF	; 255
 22a:	33 ed       	ldi	r19, 0xD3	; 211
 22c:	80 e3       	ldi	r24, 0x30	; 48
 22e:	21 50       	subi	r18, 0x01	; 1
 230:	30 40       	sbci	r19, 0x00	; 0
 232:	80 40       	sbci	r24, 0x00	; 0
 234:	e1 f7       	brne	.-8      	; 0x22e <main+0xb6>
 236:	00 c0       	rjmp	.+0      	; 0x238 <main+0xc0>
 238:	00 00       	nop
	_delay_ms(2000);
	snprintf(outs,sizeof(outs),"AT+CWJAP=\"%s\",\"%s\"\r\n", SSID, Password);		//connect to wifi network
 23a:	84 e4       	ldi	r24, 0x44	; 68
 23c:	91 e0       	ldi	r25, 0x01	; 1
 23e:	9f 93       	push	r25
 240:	8f 93       	push	r24
 242:	9f 93       	push	r25
 244:	8f 93       	push	r24
 246:	80 e3       	ldi	r24, 0x30	; 48
 248:	91 e0       	ldi	r25, 0x01	; 1
 24a:	9f 93       	push	r25
 24c:	8f 93       	push	r24
 24e:	1f 92       	push	r1
 250:	1e e1       	ldi	r17, 0x1E	; 30
 252:	1f 93       	push	r17
 254:	df 93       	push	r29
 256:	cf 93       	push	r28
 258:	0e 94 ab 01 	call	0x356	; 0x356 <snprintf>
	USART_tx_string(outs);
 25c:	ce 01       	movw	r24, r28
 25e:	0e 94 9d 00 	call	0x13a	; 0x13a <USART_tx_string>
 262:	3f ef       	ldi	r19, 0xFF	; 255
 264:	83 ed       	ldi	r24, 0xD3	; 211
 266:	90 e3       	ldi	r25, 0x30	; 48
 268:	31 50       	subi	r19, 0x01	; 1
 26a:	80 40       	sbci	r24, 0x00	; 0
 26c:	90 40       	sbci	r25, 0x00	; 0
 26e:	e1 f7       	brne	.-8      	; 0x268 <main+0xf0>
 270:	00 c0       	rjmp	.+0      	; 0x272 <main+0xfa>
 272:	00 00       	nop
	_delay_ms(2000);
	snprintf(outs,sizeof(outs),"AT+CPISTART=\"TCP\",\"%s\",80\r\n",Domain);			//connect to thingspeak
 274:	85 e4       	ldi	r24, 0x45	; 69
 276:	91 e0       	ldi	r25, 0x01	; 1
 278:	9f 93       	push	r25
 27a:	8f 93       	push	r24
 27c:	88 e5       	ldi	r24, 0x58	; 88
 27e:	91 e0       	ldi	r25, 0x01	; 1
 280:	9f 93       	push	r25
 282:	8f 93       	push	r24
 284:	1f 92       	push	r1
 286:	1f 93       	push	r17
 288:	df 93       	push	r29
 28a:	cf 93       	push	r28
 28c:	0e 94 ab 01 	call	0x356	; 0x356 <snprintf>
	USART_tx_string(outs);
 290:	ce 01       	movw	r24, r28
 292:	0e 94 9d 00 	call	0x13a	; 0x13a <USART_tx_string>
 296:	8f ef       	ldi	r24, 0xFF	; 255
 298:	93 ed       	ldi	r25, 0xD3	; 211
 29a:	20 e3       	ldi	r18, 0x30	; 48
 29c:	81 50       	subi	r24, 0x01	; 1
 29e:	90 40       	sbci	r25, 0x00	; 0
 2a0:	20 40       	sbci	r18, 0x00	; 0
 2a2:	e1 f7       	brne	.-8      	; 0x29c <main+0x124>
 2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <main+0x12e>
 2a6:	00 00       	nop
 2a8:	8d b7       	in	r24, 0x3d	; 61
 2aa:	9e b7       	in	r25, 0x3e	; 62
 2ac:	42 96       	adiw	r24, 0x12	; 18
 2ae:	0f b6       	in	r0, 0x3f	; 63
 2b0:	f8 94       	cli
 2b2:	9e bf       	out	0x3e, r25	; 62
 2b4:	0f be       	out	0x3f, r0	; 63
 2b6:	8d bf       	out	0x3d, r24	; 61
	
	
	while(1)
	{
		read_adc();
		snprintf(outs,sizeof(outs),"GET /update?api_key=%s&field1=1\r\n",API_Write_Key);		//send value
 2b8:	0f 2e       	mov	r0, r31
 2ba:	f4 e7       	ldi	r31, 0x74	; 116
 2bc:	af 2e       	mov	r10, r31
 2be:	f1 e0       	ldi	r31, 0x01	; 1
 2c0:	bf 2e       	mov	r11, r31
 2c2:	f0 2d       	mov	r31, r0
 2c4:	0f 2e       	mov	r0, r31
 2c6:	f5 e8       	ldi	r31, 0x85	; 133
 2c8:	cf 2e       	mov	r12, r31
 2ca:	f1 e0       	ldi	r31, 0x01	; 1
 2cc:	df 2e       	mov	r13, r31
 2ce:	f0 2d       	mov	r31, r0
 2d0:	0f 2e       	mov	r0, r31
 2d2:	fe e1       	ldi	r31, 0x1E	; 30
 2d4:	ff 2e       	mov	r15, r31
 2d6:	f0 2d       	mov	r31, r0
		USART_tx_string(outs);
		_delay_ms(150);
		snprintf(outs,sizeof(outs),"AT+CISEND=%3d\r\n",adc_temp);
 2d8:	07 ea       	ldi	r16, 0xA7	; 167
 2da:	11 e0       	ldi	r17, 0x01	; 1

	
	
	while(1)
	{
		read_adc();
 2dc:	0e 94 5c 00 	call	0xb8	; 0xb8 <read_adc>
		snprintf(outs,sizeof(outs),"GET /update?api_key=%s&field1=1\r\n",API_Write_Key);		//send value
 2e0:	bf 92       	push	r11
 2e2:	af 92       	push	r10
 2e4:	df 92       	push	r13
 2e6:	cf 92       	push	r12
 2e8:	1f 92       	push	r1
 2ea:	ff 92       	push	r15
 2ec:	df 93       	push	r29
 2ee:	cf 93       	push	r28
 2f0:	0e 94 ab 01 	call	0x356	; 0x356 <snprintf>
		USART_tx_string(outs);
 2f4:	ce 01       	movw	r24, r28
 2f6:	0e 94 9d 00 	call	0x13a	; 0x13a <USART_tx_string>
 2fa:	3f e7       	ldi	r19, 0x7F	; 127
 2fc:	89 ea       	ldi	r24, 0xA9	; 169
 2fe:	93 e0       	ldi	r25, 0x03	; 3
 300:	31 50       	subi	r19, 0x01	; 1
 302:	80 40       	sbci	r24, 0x00	; 0
 304:	90 40       	sbci	r25, 0x00	; 0
 306:	e1 f7       	brne	.-8      	; 0x300 <main+0x188>
 308:	00 c0       	rjmp	.+0      	; 0x30a <main+0x192>
 30a:	00 00       	nop
		_delay_ms(150);
		snprintf(outs,sizeof(outs),"AT+CISEND=%3d\r\n",adc_temp);
 30c:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <adc_temp>
 310:	90 91 d7 01 	lds	r25, 0x01D7	; 0x8001d7 <adc_temp+0x1>
 314:	9f 93       	push	r25
 316:	8f 93       	push	r24
 318:	1f 93       	push	r17
 31a:	0f 93       	push	r16
 31c:	1f 92       	push	r1
 31e:	ff 92       	push	r15
 320:	df 93       	push	r29
 322:	cf 93       	push	r28
 324:	0e 94 ab 01 	call	0x356	; 0x356 <snprintf>
		USART_tx_string(outs);
 328:	ce 01       	movw	r24, r28
 32a:	0e 94 9d 00 	call	0x13a	; 0x13a <USART_tx_string>
 32e:	8f ef       	ldi	r24, 0xFF	; 255
 330:	9c e2       	ldi	r25, 0x2C	; 44
 332:	21 e3       	ldi	r18, 0x31	; 49
 334:	31 e0       	ldi	r19, 0x01	; 1
 336:	81 50       	subi	r24, 0x01	; 1
 338:	90 40       	sbci	r25, 0x00	; 0
 33a:	20 40       	sbci	r18, 0x00	; 0
 33c:	30 40       	sbci	r19, 0x00	; 0
 33e:	d9 f7       	brne	.-10     	; 0x336 <main+0x1be>
 340:	00 c0       	rjmp	.+0      	; 0x342 <main+0x1ca>
 342:	00 00       	nop
 344:	8d b7       	in	r24, 0x3d	; 61
 346:	9e b7       	in	r25, 0x3e	; 62
 348:	40 96       	adiw	r24, 0x10	; 16
 34a:	0f b6       	in	r0, 0x3f	; 63
 34c:	f8 94       	cli
 34e:	9e bf       	out	0x3e, r25	; 62
 350:	0f be       	out	0x3f, r0	; 63
 352:	8d bf       	out	0x3d, r24	; 61
 354:	c3 cf       	rjmp	.-122    	; 0x2dc <main+0x164>

00000356 <snprintf>:
 356:	ae e0       	ldi	r26, 0x0E	; 14
 358:	b0 e0       	ldi	r27, 0x00	; 0
 35a:	e1 eb       	ldi	r30, 0xB1	; 177
 35c:	f1 e0       	ldi	r31, 0x01	; 1
 35e:	0c 94 7a 04 	jmp	0x8f4	; 0x8f4 <__prologue_saves__+0x1c>
 362:	0d 89       	ldd	r16, Y+21	; 0x15
 364:	1e 89       	ldd	r17, Y+22	; 0x16
 366:	8f 89       	ldd	r24, Y+23	; 0x17
 368:	98 8d       	ldd	r25, Y+24	; 0x18
 36a:	26 e0       	ldi	r18, 0x06	; 6
 36c:	2c 83       	std	Y+4, r18	; 0x04
 36e:	1a 83       	std	Y+2, r17	; 0x02
 370:	09 83       	std	Y+1, r16	; 0x01
 372:	97 ff       	sbrs	r25, 7
 374:	02 c0       	rjmp	.+4      	; 0x37a <snprintf+0x24>
 376:	80 e0       	ldi	r24, 0x00	; 0
 378:	90 e8       	ldi	r25, 0x80	; 128
 37a:	01 97       	sbiw	r24, 0x01	; 1
 37c:	9e 83       	std	Y+6, r25	; 0x06
 37e:	8d 83       	std	Y+5, r24	; 0x05
 380:	ae 01       	movw	r20, r28
 382:	45 5e       	subi	r20, 0xE5	; 229
 384:	5f 4f       	sbci	r21, 0xFF	; 255
 386:	69 8d       	ldd	r22, Y+25	; 0x19
 388:	7a 8d       	ldd	r23, Y+26	; 0x1a
 38a:	ce 01       	movw	r24, r28
 38c:	01 96       	adiw	r24, 0x01	; 1
 38e:	0e 94 db 01 	call	0x3b6	; 0x3b6 <vfprintf>
 392:	4d 81       	ldd	r20, Y+5	; 0x05
 394:	5e 81       	ldd	r21, Y+6	; 0x06
 396:	57 fd       	sbrc	r21, 7
 398:	0a c0       	rjmp	.+20     	; 0x3ae <snprintf+0x58>
 39a:	2f 81       	ldd	r18, Y+7	; 0x07
 39c:	38 85       	ldd	r19, Y+8	; 0x08
 39e:	42 17       	cp	r20, r18
 3a0:	53 07       	cpc	r21, r19
 3a2:	0c f4       	brge	.+2      	; 0x3a6 <snprintf+0x50>
 3a4:	9a 01       	movw	r18, r20
 3a6:	f8 01       	movw	r30, r16
 3a8:	e2 0f       	add	r30, r18
 3aa:	f3 1f       	adc	r31, r19
 3ac:	10 82       	st	Z, r1
 3ae:	2e 96       	adiw	r28, 0x0e	; 14
 3b0:	e4 e0       	ldi	r30, 0x04	; 4
 3b2:	0c 94 96 04 	jmp	0x92c	; 0x92c <__epilogue_restores__+0x1c>

000003b6 <vfprintf>:
 3b6:	ab e0       	ldi	r26, 0x0B	; 11
 3b8:	b0 e0       	ldi	r27, 0x00	; 0
 3ba:	e1 ee       	ldi	r30, 0xE1	; 225
 3bc:	f1 e0       	ldi	r31, 0x01	; 1
 3be:	0c 94 6c 04 	jmp	0x8d8	; 0x8d8 <__prologue_saves__>
 3c2:	6c 01       	movw	r12, r24
 3c4:	7b 01       	movw	r14, r22
 3c6:	8a 01       	movw	r16, r20
 3c8:	fc 01       	movw	r30, r24
 3ca:	17 82       	std	Z+7, r1	; 0x07
 3cc:	16 82       	std	Z+6, r1	; 0x06
 3ce:	83 81       	ldd	r24, Z+3	; 0x03
 3d0:	81 ff       	sbrs	r24, 1
 3d2:	cc c1       	rjmp	.+920    	; 0x76c <__LOCK_REGION_LENGTH__+0x36c>
 3d4:	ce 01       	movw	r24, r28
 3d6:	01 96       	adiw	r24, 0x01	; 1
 3d8:	3c 01       	movw	r6, r24
 3da:	f6 01       	movw	r30, r12
 3dc:	93 81       	ldd	r25, Z+3	; 0x03
 3de:	f7 01       	movw	r30, r14
 3e0:	93 fd       	sbrc	r25, 3
 3e2:	85 91       	lpm	r24, Z+
 3e4:	93 ff       	sbrs	r25, 3
 3e6:	81 91       	ld	r24, Z+
 3e8:	7f 01       	movw	r14, r30
 3ea:	88 23       	and	r24, r24
 3ec:	09 f4       	brne	.+2      	; 0x3f0 <vfprintf+0x3a>
 3ee:	ba c1       	rjmp	.+884    	; 0x764 <__LOCK_REGION_LENGTH__+0x364>
 3f0:	85 32       	cpi	r24, 0x25	; 37
 3f2:	39 f4       	brne	.+14     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3f4:	93 fd       	sbrc	r25, 3
 3f6:	85 91       	lpm	r24, Z+
 3f8:	93 ff       	sbrs	r25, 3
 3fa:	81 91       	ld	r24, Z+
 3fc:	7f 01       	movw	r14, r30
 3fe:	85 32       	cpi	r24, 0x25	; 37
 400:	29 f4       	brne	.+10     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 402:	b6 01       	movw	r22, r12
 404:	90 e0       	ldi	r25, 0x00	; 0
 406:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <fputc>
 40a:	e7 cf       	rjmp	.-50     	; 0x3da <vfprintf+0x24>
 40c:	91 2c       	mov	r9, r1
 40e:	21 2c       	mov	r2, r1
 410:	31 2c       	mov	r3, r1
 412:	ff e1       	ldi	r31, 0x1F	; 31
 414:	f3 15       	cp	r31, r3
 416:	d8 f0       	brcs	.+54     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 418:	8b 32       	cpi	r24, 0x2B	; 43
 41a:	79 f0       	breq	.+30     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 41c:	38 f4       	brcc	.+14     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 41e:	80 32       	cpi	r24, 0x20	; 32
 420:	79 f0       	breq	.+30     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 422:	83 32       	cpi	r24, 0x23	; 35
 424:	a1 f4       	brne	.+40     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 426:	23 2d       	mov	r18, r3
 428:	20 61       	ori	r18, 0x10	; 16
 42a:	1d c0       	rjmp	.+58     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 42c:	8d 32       	cpi	r24, 0x2D	; 45
 42e:	61 f0       	breq	.+24     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 430:	80 33       	cpi	r24, 0x30	; 48
 432:	69 f4       	brne	.+26     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 434:	23 2d       	mov	r18, r3
 436:	21 60       	ori	r18, 0x01	; 1
 438:	16 c0       	rjmp	.+44     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 43a:	83 2d       	mov	r24, r3
 43c:	82 60       	ori	r24, 0x02	; 2
 43e:	38 2e       	mov	r3, r24
 440:	e3 2d       	mov	r30, r3
 442:	e4 60       	ori	r30, 0x04	; 4
 444:	3e 2e       	mov	r3, r30
 446:	2a c0       	rjmp	.+84     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 448:	f3 2d       	mov	r31, r3
 44a:	f8 60       	ori	r31, 0x08	; 8
 44c:	1d c0       	rjmp	.+58     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 44e:	37 fc       	sbrc	r3, 7
 450:	2d c0       	rjmp	.+90     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 452:	20 ed       	ldi	r18, 0xD0	; 208
 454:	28 0f       	add	r18, r24
 456:	2a 30       	cpi	r18, 0x0A	; 10
 458:	40 f0       	brcs	.+16     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 45a:	8e 32       	cpi	r24, 0x2E	; 46
 45c:	b9 f4       	brne	.+46     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 45e:	36 fc       	sbrc	r3, 6
 460:	81 c1       	rjmp	.+770    	; 0x764 <__LOCK_REGION_LENGTH__+0x364>
 462:	23 2d       	mov	r18, r3
 464:	20 64       	ori	r18, 0x40	; 64
 466:	32 2e       	mov	r3, r18
 468:	19 c0       	rjmp	.+50     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 46a:	36 fe       	sbrs	r3, 6
 46c:	06 c0       	rjmp	.+12     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 46e:	8a e0       	ldi	r24, 0x0A	; 10
 470:	98 9e       	mul	r9, r24
 472:	20 0d       	add	r18, r0
 474:	11 24       	eor	r1, r1
 476:	92 2e       	mov	r9, r18
 478:	11 c0       	rjmp	.+34     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 47a:	ea e0       	ldi	r30, 0x0A	; 10
 47c:	2e 9e       	mul	r2, r30
 47e:	20 0d       	add	r18, r0
 480:	11 24       	eor	r1, r1
 482:	22 2e       	mov	r2, r18
 484:	f3 2d       	mov	r31, r3
 486:	f0 62       	ori	r31, 0x20	; 32
 488:	3f 2e       	mov	r3, r31
 48a:	08 c0       	rjmp	.+16     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 48c:	8c 36       	cpi	r24, 0x6C	; 108
 48e:	21 f4       	brne	.+8      	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 490:	83 2d       	mov	r24, r3
 492:	80 68       	ori	r24, 0x80	; 128
 494:	38 2e       	mov	r3, r24
 496:	02 c0       	rjmp	.+4      	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 498:	88 36       	cpi	r24, 0x68	; 104
 49a:	41 f4       	brne	.+16     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 49c:	f7 01       	movw	r30, r14
 49e:	93 fd       	sbrc	r25, 3
 4a0:	85 91       	lpm	r24, Z+
 4a2:	93 ff       	sbrs	r25, 3
 4a4:	81 91       	ld	r24, Z+
 4a6:	7f 01       	movw	r14, r30
 4a8:	81 11       	cpse	r24, r1
 4aa:	b3 cf       	rjmp	.-154    	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 4ac:	98 2f       	mov	r25, r24
 4ae:	9f 7d       	andi	r25, 0xDF	; 223
 4b0:	95 54       	subi	r25, 0x45	; 69
 4b2:	93 30       	cpi	r25, 0x03	; 3
 4b4:	28 f4       	brcc	.+10     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4b6:	0c 5f       	subi	r16, 0xFC	; 252
 4b8:	1f 4f       	sbci	r17, 0xFF	; 255
 4ba:	9f e3       	ldi	r25, 0x3F	; 63
 4bc:	99 83       	std	Y+1, r25	; 0x01
 4be:	0d c0       	rjmp	.+26     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4c0:	83 36       	cpi	r24, 0x63	; 99
 4c2:	31 f0       	breq	.+12     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4c4:	83 37       	cpi	r24, 0x73	; 115
 4c6:	71 f0       	breq	.+28     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4c8:	83 35       	cpi	r24, 0x53	; 83
 4ca:	09 f0       	breq	.+2      	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4cc:	59 c0       	rjmp	.+178    	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
 4ce:	21 c0       	rjmp	.+66     	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
 4d0:	f8 01       	movw	r30, r16
 4d2:	80 81       	ld	r24, Z
 4d4:	89 83       	std	Y+1, r24	; 0x01
 4d6:	0e 5f       	subi	r16, 0xFE	; 254
 4d8:	1f 4f       	sbci	r17, 0xFF	; 255
 4da:	88 24       	eor	r8, r8
 4dc:	83 94       	inc	r8
 4de:	91 2c       	mov	r9, r1
 4e0:	53 01       	movw	r10, r6
 4e2:	13 c0       	rjmp	.+38     	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 4e4:	28 01       	movw	r4, r16
 4e6:	f2 e0       	ldi	r31, 0x02	; 2
 4e8:	4f 0e       	add	r4, r31
 4ea:	51 1c       	adc	r5, r1
 4ec:	f8 01       	movw	r30, r16
 4ee:	a0 80       	ld	r10, Z
 4f0:	b1 80       	ldd	r11, Z+1	; 0x01
 4f2:	36 fe       	sbrs	r3, 6
 4f4:	03 c0       	rjmp	.+6      	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4f6:	69 2d       	mov	r22, r9
 4f8:	70 e0       	ldi	r23, 0x00	; 0
 4fa:	02 c0       	rjmp	.+4      	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4fc:	6f ef       	ldi	r22, 0xFF	; 255
 4fe:	7f ef       	ldi	r23, 0xFF	; 255
 500:	c5 01       	movw	r24, r10
 502:	0e 94 c7 03 	call	0x78e	; 0x78e <strnlen>
 506:	4c 01       	movw	r8, r24
 508:	82 01       	movw	r16, r4
 50a:	f3 2d       	mov	r31, r3
 50c:	ff 77       	andi	r31, 0x7F	; 127
 50e:	3f 2e       	mov	r3, r31
 510:	16 c0       	rjmp	.+44     	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 512:	28 01       	movw	r4, r16
 514:	22 e0       	ldi	r18, 0x02	; 2
 516:	42 0e       	add	r4, r18
 518:	51 1c       	adc	r5, r1
 51a:	f8 01       	movw	r30, r16
 51c:	a0 80       	ld	r10, Z
 51e:	b1 80       	ldd	r11, Z+1	; 0x01
 520:	36 fe       	sbrs	r3, 6
 522:	03 c0       	rjmp	.+6      	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 524:	69 2d       	mov	r22, r9
 526:	70 e0       	ldi	r23, 0x00	; 0
 528:	02 c0       	rjmp	.+4      	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 52a:	6f ef       	ldi	r22, 0xFF	; 255
 52c:	7f ef       	ldi	r23, 0xFF	; 255
 52e:	c5 01       	movw	r24, r10
 530:	0e 94 bc 03 	call	0x778	; 0x778 <strnlen_P>
 534:	4c 01       	movw	r8, r24
 536:	f3 2d       	mov	r31, r3
 538:	f0 68       	ori	r31, 0x80	; 128
 53a:	3f 2e       	mov	r3, r31
 53c:	82 01       	movw	r16, r4
 53e:	33 fc       	sbrc	r3, 3
 540:	1b c0       	rjmp	.+54     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 542:	82 2d       	mov	r24, r2
 544:	90 e0       	ldi	r25, 0x00	; 0
 546:	88 16       	cp	r8, r24
 548:	99 06       	cpc	r9, r25
 54a:	b0 f4       	brcc	.+44     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 54c:	b6 01       	movw	r22, r12
 54e:	80 e2       	ldi	r24, 0x20	; 32
 550:	90 e0       	ldi	r25, 0x00	; 0
 552:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <fputc>
 556:	2a 94       	dec	r2
 558:	f4 cf       	rjmp	.-24     	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 55a:	f5 01       	movw	r30, r10
 55c:	37 fc       	sbrc	r3, 7
 55e:	85 91       	lpm	r24, Z+
 560:	37 fe       	sbrs	r3, 7
 562:	81 91       	ld	r24, Z+
 564:	5f 01       	movw	r10, r30
 566:	b6 01       	movw	r22, r12
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <fputc>
 56e:	21 10       	cpse	r2, r1
 570:	2a 94       	dec	r2
 572:	21 e0       	ldi	r18, 0x01	; 1
 574:	82 1a       	sub	r8, r18
 576:	91 08       	sbc	r9, r1
 578:	81 14       	cp	r8, r1
 57a:	91 04       	cpc	r9, r1
 57c:	71 f7       	brne	.-36     	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 57e:	e8 c0       	rjmp	.+464    	; 0x750 <__LOCK_REGION_LENGTH__+0x350>
 580:	84 36       	cpi	r24, 0x64	; 100
 582:	11 f0       	breq	.+4      	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 584:	89 36       	cpi	r24, 0x69	; 105
 586:	41 f5       	brne	.+80     	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 588:	f8 01       	movw	r30, r16
 58a:	37 fe       	sbrs	r3, 7
 58c:	07 c0       	rjmp	.+14     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 58e:	60 81       	ld	r22, Z
 590:	71 81       	ldd	r23, Z+1	; 0x01
 592:	82 81       	ldd	r24, Z+2	; 0x02
 594:	93 81       	ldd	r25, Z+3	; 0x03
 596:	0c 5f       	subi	r16, 0xFC	; 252
 598:	1f 4f       	sbci	r17, 0xFF	; 255
 59a:	08 c0       	rjmp	.+16     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 59c:	60 81       	ld	r22, Z
 59e:	71 81       	ldd	r23, Z+1	; 0x01
 5a0:	07 2e       	mov	r0, r23
 5a2:	00 0c       	add	r0, r0
 5a4:	88 0b       	sbc	r24, r24
 5a6:	99 0b       	sbc	r25, r25
 5a8:	0e 5f       	subi	r16, 0xFE	; 254
 5aa:	1f 4f       	sbci	r17, 0xFF	; 255
 5ac:	f3 2d       	mov	r31, r3
 5ae:	ff 76       	andi	r31, 0x6F	; 111
 5b0:	3f 2e       	mov	r3, r31
 5b2:	97 ff       	sbrs	r25, 7
 5b4:	09 c0       	rjmp	.+18     	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
 5b6:	90 95       	com	r25
 5b8:	80 95       	com	r24
 5ba:	70 95       	com	r23
 5bc:	61 95       	neg	r22
 5be:	7f 4f       	sbci	r23, 0xFF	; 255
 5c0:	8f 4f       	sbci	r24, 0xFF	; 255
 5c2:	9f 4f       	sbci	r25, 0xFF	; 255
 5c4:	f0 68       	ori	r31, 0x80	; 128
 5c6:	3f 2e       	mov	r3, r31
 5c8:	2a e0       	ldi	r18, 0x0A	; 10
 5ca:	30 e0       	ldi	r19, 0x00	; 0
 5cc:	a3 01       	movw	r20, r6
 5ce:	0e 94 0e 04 	call	0x81c	; 0x81c <__ultoa_invert>
 5d2:	88 2e       	mov	r8, r24
 5d4:	86 18       	sub	r8, r6
 5d6:	45 c0       	rjmp	.+138    	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
 5d8:	85 37       	cpi	r24, 0x75	; 117
 5da:	31 f4       	brne	.+12     	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5dc:	23 2d       	mov	r18, r3
 5de:	2f 7e       	andi	r18, 0xEF	; 239
 5e0:	b2 2e       	mov	r11, r18
 5e2:	2a e0       	ldi	r18, 0x0A	; 10
 5e4:	30 e0       	ldi	r19, 0x00	; 0
 5e6:	25 c0       	rjmp	.+74     	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 5e8:	93 2d       	mov	r25, r3
 5ea:	99 7f       	andi	r25, 0xF9	; 249
 5ec:	b9 2e       	mov	r11, r25
 5ee:	8f 36       	cpi	r24, 0x6F	; 111
 5f0:	c1 f0       	breq	.+48     	; 0x622 <__LOCK_REGION_LENGTH__+0x222>
 5f2:	18 f4       	brcc	.+6      	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5f4:	88 35       	cpi	r24, 0x58	; 88
 5f6:	79 f0       	breq	.+30     	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 5f8:	b5 c0       	rjmp	.+362    	; 0x764 <__LOCK_REGION_LENGTH__+0x364>
 5fa:	80 37       	cpi	r24, 0x70	; 112
 5fc:	19 f0       	breq	.+6      	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 5fe:	88 37       	cpi	r24, 0x78	; 120
 600:	21 f0       	breq	.+8      	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
 602:	b0 c0       	rjmp	.+352    	; 0x764 <__LOCK_REGION_LENGTH__+0x364>
 604:	e9 2f       	mov	r30, r25
 606:	e0 61       	ori	r30, 0x10	; 16
 608:	be 2e       	mov	r11, r30
 60a:	b4 fe       	sbrs	r11, 4
 60c:	0d c0       	rjmp	.+26     	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 60e:	fb 2d       	mov	r31, r11
 610:	f4 60       	ori	r31, 0x04	; 4
 612:	bf 2e       	mov	r11, r31
 614:	09 c0       	rjmp	.+18     	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 616:	34 fe       	sbrs	r3, 4
 618:	0a c0       	rjmp	.+20     	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 61a:	29 2f       	mov	r18, r25
 61c:	26 60       	ori	r18, 0x06	; 6
 61e:	b2 2e       	mov	r11, r18
 620:	06 c0       	rjmp	.+12     	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 622:	28 e0       	ldi	r18, 0x08	; 8
 624:	30 e0       	ldi	r19, 0x00	; 0
 626:	05 c0       	rjmp	.+10     	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 628:	20 e1       	ldi	r18, 0x10	; 16
 62a:	30 e0       	ldi	r19, 0x00	; 0
 62c:	02 c0       	rjmp	.+4      	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 62e:	20 e1       	ldi	r18, 0x10	; 16
 630:	32 e0       	ldi	r19, 0x02	; 2
 632:	f8 01       	movw	r30, r16
 634:	b7 fe       	sbrs	r11, 7
 636:	07 c0       	rjmp	.+14     	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 638:	60 81       	ld	r22, Z
 63a:	71 81       	ldd	r23, Z+1	; 0x01
 63c:	82 81       	ldd	r24, Z+2	; 0x02
 63e:	93 81       	ldd	r25, Z+3	; 0x03
 640:	0c 5f       	subi	r16, 0xFC	; 252
 642:	1f 4f       	sbci	r17, 0xFF	; 255
 644:	06 c0       	rjmp	.+12     	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
 646:	60 81       	ld	r22, Z
 648:	71 81       	ldd	r23, Z+1	; 0x01
 64a:	80 e0       	ldi	r24, 0x00	; 0
 64c:	90 e0       	ldi	r25, 0x00	; 0
 64e:	0e 5f       	subi	r16, 0xFE	; 254
 650:	1f 4f       	sbci	r17, 0xFF	; 255
 652:	a3 01       	movw	r20, r6
 654:	0e 94 0e 04 	call	0x81c	; 0x81c <__ultoa_invert>
 658:	88 2e       	mov	r8, r24
 65a:	86 18       	sub	r8, r6
 65c:	fb 2d       	mov	r31, r11
 65e:	ff 77       	andi	r31, 0x7F	; 127
 660:	3f 2e       	mov	r3, r31
 662:	36 fe       	sbrs	r3, 6
 664:	0d c0       	rjmp	.+26     	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 666:	23 2d       	mov	r18, r3
 668:	2e 7f       	andi	r18, 0xFE	; 254
 66a:	a2 2e       	mov	r10, r18
 66c:	89 14       	cp	r8, r9
 66e:	58 f4       	brcc	.+22     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
 670:	34 fe       	sbrs	r3, 4
 672:	0b c0       	rjmp	.+22     	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 674:	32 fc       	sbrc	r3, 2
 676:	09 c0       	rjmp	.+18     	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 678:	83 2d       	mov	r24, r3
 67a:	8e 7e       	andi	r24, 0xEE	; 238
 67c:	a8 2e       	mov	r10, r24
 67e:	05 c0       	rjmp	.+10     	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 680:	b8 2c       	mov	r11, r8
 682:	a3 2c       	mov	r10, r3
 684:	03 c0       	rjmp	.+6      	; 0x68c <__LOCK_REGION_LENGTH__+0x28c>
 686:	b8 2c       	mov	r11, r8
 688:	01 c0       	rjmp	.+2      	; 0x68c <__LOCK_REGION_LENGTH__+0x28c>
 68a:	b9 2c       	mov	r11, r9
 68c:	a4 fe       	sbrs	r10, 4
 68e:	0f c0       	rjmp	.+30     	; 0x6ae <__LOCK_REGION_LENGTH__+0x2ae>
 690:	fe 01       	movw	r30, r28
 692:	e8 0d       	add	r30, r8
 694:	f1 1d       	adc	r31, r1
 696:	80 81       	ld	r24, Z
 698:	80 33       	cpi	r24, 0x30	; 48
 69a:	21 f4       	brne	.+8      	; 0x6a4 <__LOCK_REGION_LENGTH__+0x2a4>
 69c:	9a 2d       	mov	r25, r10
 69e:	99 7e       	andi	r25, 0xE9	; 233
 6a0:	a9 2e       	mov	r10, r25
 6a2:	09 c0       	rjmp	.+18     	; 0x6b6 <__LOCK_REGION_LENGTH__+0x2b6>
 6a4:	a2 fe       	sbrs	r10, 2
 6a6:	06 c0       	rjmp	.+12     	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 6a8:	b3 94       	inc	r11
 6aa:	b3 94       	inc	r11
 6ac:	04 c0       	rjmp	.+8      	; 0x6b6 <__LOCK_REGION_LENGTH__+0x2b6>
 6ae:	8a 2d       	mov	r24, r10
 6b0:	86 78       	andi	r24, 0x86	; 134
 6b2:	09 f0       	breq	.+2      	; 0x6b6 <__LOCK_REGION_LENGTH__+0x2b6>
 6b4:	b3 94       	inc	r11
 6b6:	a3 fc       	sbrc	r10, 3
 6b8:	11 c0       	rjmp	.+34     	; 0x6dc <__LOCK_REGION_LENGTH__+0x2dc>
 6ba:	a0 fe       	sbrs	r10, 0
 6bc:	06 c0       	rjmp	.+12     	; 0x6ca <__LOCK_REGION_LENGTH__+0x2ca>
 6be:	b2 14       	cp	r11, r2
 6c0:	88 f4       	brcc	.+34     	; 0x6e4 <__LOCK_REGION_LENGTH__+0x2e4>
 6c2:	28 0c       	add	r2, r8
 6c4:	92 2c       	mov	r9, r2
 6c6:	9b 18       	sub	r9, r11
 6c8:	0e c0       	rjmp	.+28     	; 0x6e6 <__LOCK_REGION_LENGTH__+0x2e6>
 6ca:	b2 14       	cp	r11, r2
 6cc:	60 f4       	brcc	.+24     	; 0x6e6 <__LOCK_REGION_LENGTH__+0x2e6>
 6ce:	b6 01       	movw	r22, r12
 6d0:	80 e2       	ldi	r24, 0x20	; 32
 6d2:	90 e0       	ldi	r25, 0x00	; 0
 6d4:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <fputc>
 6d8:	b3 94       	inc	r11
 6da:	f7 cf       	rjmp	.-18     	; 0x6ca <__LOCK_REGION_LENGTH__+0x2ca>
 6dc:	b2 14       	cp	r11, r2
 6de:	18 f4       	brcc	.+6      	; 0x6e6 <__LOCK_REGION_LENGTH__+0x2e6>
 6e0:	2b 18       	sub	r2, r11
 6e2:	02 c0       	rjmp	.+4      	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 6e4:	98 2c       	mov	r9, r8
 6e6:	21 2c       	mov	r2, r1
 6e8:	a4 fe       	sbrs	r10, 4
 6ea:	10 c0       	rjmp	.+32     	; 0x70c <__LOCK_REGION_LENGTH__+0x30c>
 6ec:	b6 01       	movw	r22, r12
 6ee:	80 e3       	ldi	r24, 0x30	; 48
 6f0:	90 e0       	ldi	r25, 0x00	; 0
 6f2:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <fputc>
 6f6:	a2 fe       	sbrs	r10, 2
 6f8:	17 c0       	rjmp	.+46     	; 0x728 <__LOCK_REGION_LENGTH__+0x328>
 6fa:	a1 fc       	sbrc	r10, 1
 6fc:	03 c0       	rjmp	.+6      	; 0x704 <__LOCK_REGION_LENGTH__+0x304>
 6fe:	88 e7       	ldi	r24, 0x78	; 120
 700:	90 e0       	ldi	r25, 0x00	; 0
 702:	02 c0       	rjmp	.+4      	; 0x708 <__LOCK_REGION_LENGTH__+0x308>
 704:	88 e5       	ldi	r24, 0x58	; 88
 706:	90 e0       	ldi	r25, 0x00	; 0
 708:	b6 01       	movw	r22, r12
 70a:	0c c0       	rjmp	.+24     	; 0x724 <__LOCK_REGION_LENGTH__+0x324>
 70c:	8a 2d       	mov	r24, r10
 70e:	86 78       	andi	r24, 0x86	; 134
 710:	59 f0       	breq	.+22     	; 0x728 <__LOCK_REGION_LENGTH__+0x328>
 712:	a1 fe       	sbrs	r10, 1
 714:	02 c0       	rjmp	.+4      	; 0x71a <__LOCK_REGION_LENGTH__+0x31a>
 716:	8b e2       	ldi	r24, 0x2B	; 43
 718:	01 c0       	rjmp	.+2      	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
 71a:	80 e2       	ldi	r24, 0x20	; 32
 71c:	a7 fc       	sbrc	r10, 7
 71e:	8d e2       	ldi	r24, 0x2D	; 45
 720:	b6 01       	movw	r22, r12
 722:	90 e0       	ldi	r25, 0x00	; 0
 724:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <fputc>
 728:	89 14       	cp	r8, r9
 72a:	38 f4       	brcc	.+14     	; 0x73a <__LOCK_REGION_LENGTH__+0x33a>
 72c:	b6 01       	movw	r22, r12
 72e:	80 e3       	ldi	r24, 0x30	; 48
 730:	90 e0       	ldi	r25, 0x00	; 0
 732:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <fputc>
 736:	9a 94       	dec	r9
 738:	f7 cf       	rjmp	.-18     	; 0x728 <__LOCK_REGION_LENGTH__+0x328>
 73a:	8a 94       	dec	r8
 73c:	f3 01       	movw	r30, r6
 73e:	e8 0d       	add	r30, r8
 740:	f1 1d       	adc	r31, r1
 742:	80 81       	ld	r24, Z
 744:	b6 01       	movw	r22, r12
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <fputc>
 74c:	81 10       	cpse	r8, r1
 74e:	f5 cf       	rjmp	.-22     	; 0x73a <__LOCK_REGION_LENGTH__+0x33a>
 750:	22 20       	and	r2, r2
 752:	09 f4       	brne	.+2      	; 0x756 <__LOCK_REGION_LENGTH__+0x356>
 754:	42 ce       	rjmp	.-892    	; 0x3da <vfprintf+0x24>
 756:	b6 01       	movw	r22, r12
 758:	80 e2       	ldi	r24, 0x20	; 32
 75a:	90 e0       	ldi	r25, 0x00	; 0
 75c:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <fputc>
 760:	2a 94       	dec	r2
 762:	f6 cf       	rjmp	.-20     	; 0x750 <__LOCK_REGION_LENGTH__+0x350>
 764:	f6 01       	movw	r30, r12
 766:	86 81       	ldd	r24, Z+6	; 0x06
 768:	97 81       	ldd	r25, Z+7	; 0x07
 76a:	02 c0       	rjmp	.+4      	; 0x770 <__LOCK_REGION_LENGTH__+0x370>
 76c:	8f ef       	ldi	r24, 0xFF	; 255
 76e:	9f ef       	ldi	r25, 0xFF	; 255
 770:	2b 96       	adiw	r28, 0x0b	; 11
 772:	e2 e1       	ldi	r30, 0x12	; 18
 774:	0c 94 88 04 	jmp	0x910	; 0x910 <__epilogue_restores__>

00000778 <strnlen_P>:
 778:	fc 01       	movw	r30, r24
 77a:	05 90       	lpm	r0, Z+
 77c:	61 50       	subi	r22, 0x01	; 1
 77e:	70 40       	sbci	r23, 0x00	; 0
 780:	01 10       	cpse	r0, r1
 782:	d8 f7       	brcc	.-10     	; 0x77a <strnlen_P+0x2>
 784:	80 95       	com	r24
 786:	90 95       	com	r25
 788:	8e 0f       	add	r24, r30
 78a:	9f 1f       	adc	r25, r31
 78c:	08 95       	ret

0000078e <strnlen>:
 78e:	fc 01       	movw	r30, r24
 790:	61 50       	subi	r22, 0x01	; 1
 792:	70 40       	sbci	r23, 0x00	; 0
 794:	01 90       	ld	r0, Z+
 796:	01 10       	cpse	r0, r1
 798:	d8 f7       	brcc	.-10     	; 0x790 <strnlen+0x2>
 79a:	80 95       	com	r24
 79c:	90 95       	com	r25
 79e:	8e 0f       	add	r24, r30
 7a0:	9f 1f       	adc	r25, r31
 7a2:	08 95       	ret

000007a4 <fputc>:
 7a4:	0f 93       	push	r16
 7a6:	1f 93       	push	r17
 7a8:	cf 93       	push	r28
 7aa:	df 93       	push	r29
 7ac:	fb 01       	movw	r30, r22
 7ae:	23 81       	ldd	r18, Z+3	; 0x03
 7b0:	21 fd       	sbrc	r18, 1
 7b2:	03 c0       	rjmp	.+6      	; 0x7ba <fputc+0x16>
 7b4:	8f ef       	ldi	r24, 0xFF	; 255
 7b6:	9f ef       	ldi	r25, 0xFF	; 255
 7b8:	2c c0       	rjmp	.+88     	; 0x812 <fputc+0x6e>
 7ba:	22 ff       	sbrs	r18, 2
 7bc:	16 c0       	rjmp	.+44     	; 0x7ea <fputc+0x46>
 7be:	46 81       	ldd	r20, Z+6	; 0x06
 7c0:	57 81       	ldd	r21, Z+7	; 0x07
 7c2:	24 81       	ldd	r18, Z+4	; 0x04
 7c4:	35 81       	ldd	r19, Z+5	; 0x05
 7c6:	42 17       	cp	r20, r18
 7c8:	53 07       	cpc	r21, r19
 7ca:	44 f4       	brge	.+16     	; 0x7dc <fputc+0x38>
 7cc:	a0 81       	ld	r26, Z
 7ce:	b1 81       	ldd	r27, Z+1	; 0x01
 7d0:	9d 01       	movw	r18, r26
 7d2:	2f 5f       	subi	r18, 0xFF	; 255
 7d4:	3f 4f       	sbci	r19, 0xFF	; 255
 7d6:	31 83       	std	Z+1, r19	; 0x01
 7d8:	20 83       	st	Z, r18
 7da:	8c 93       	st	X, r24
 7dc:	26 81       	ldd	r18, Z+6	; 0x06
 7de:	37 81       	ldd	r19, Z+7	; 0x07
 7e0:	2f 5f       	subi	r18, 0xFF	; 255
 7e2:	3f 4f       	sbci	r19, 0xFF	; 255
 7e4:	37 83       	std	Z+7, r19	; 0x07
 7e6:	26 83       	std	Z+6, r18	; 0x06
 7e8:	14 c0       	rjmp	.+40     	; 0x812 <fputc+0x6e>
 7ea:	8b 01       	movw	r16, r22
 7ec:	ec 01       	movw	r28, r24
 7ee:	fb 01       	movw	r30, r22
 7f0:	00 84       	ldd	r0, Z+8	; 0x08
 7f2:	f1 85       	ldd	r31, Z+9	; 0x09
 7f4:	e0 2d       	mov	r30, r0
 7f6:	09 95       	icall
 7f8:	89 2b       	or	r24, r25
 7fa:	e1 f6       	brne	.-72     	; 0x7b4 <fputc+0x10>
 7fc:	d8 01       	movw	r26, r16
 7fe:	16 96       	adiw	r26, 0x06	; 6
 800:	8d 91       	ld	r24, X+
 802:	9c 91       	ld	r25, X
 804:	17 97       	sbiw	r26, 0x07	; 7
 806:	01 96       	adiw	r24, 0x01	; 1
 808:	17 96       	adiw	r26, 0x07	; 7
 80a:	9c 93       	st	X, r25
 80c:	8e 93       	st	-X, r24
 80e:	16 97       	sbiw	r26, 0x06	; 6
 810:	ce 01       	movw	r24, r28
 812:	df 91       	pop	r29
 814:	cf 91       	pop	r28
 816:	1f 91       	pop	r17
 818:	0f 91       	pop	r16
 81a:	08 95       	ret

0000081c <__ultoa_invert>:
 81c:	fa 01       	movw	r30, r20
 81e:	aa 27       	eor	r26, r26
 820:	28 30       	cpi	r18, 0x08	; 8
 822:	51 f1       	breq	.+84     	; 0x878 <__ultoa_invert+0x5c>
 824:	20 31       	cpi	r18, 0x10	; 16
 826:	81 f1       	breq	.+96     	; 0x888 <__ultoa_invert+0x6c>
 828:	e8 94       	clt
 82a:	6f 93       	push	r22
 82c:	6e 7f       	andi	r22, 0xFE	; 254
 82e:	6e 5f       	subi	r22, 0xFE	; 254
 830:	7f 4f       	sbci	r23, 0xFF	; 255
 832:	8f 4f       	sbci	r24, 0xFF	; 255
 834:	9f 4f       	sbci	r25, 0xFF	; 255
 836:	af 4f       	sbci	r26, 0xFF	; 255
 838:	b1 e0       	ldi	r27, 0x01	; 1
 83a:	3e d0       	rcall	.+124    	; 0x8b8 <__ultoa_invert+0x9c>
 83c:	b4 e0       	ldi	r27, 0x04	; 4
 83e:	3c d0       	rcall	.+120    	; 0x8b8 <__ultoa_invert+0x9c>
 840:	67 0f       	add	r22, r23
 842:	78 1f       	adc	r23, r24
 844:	89 1f       	adc	r24, r25
 846:	9a 1f       	adc	r25, r26
 848:	a1 1d       	adc	r26, r1
 84a:	68 0f       	add	r22, r24
 84c:	79 1f       	adc	r23, r25
 84e:	8a 1f       	adc	r24, r26
 850:	91 1d       	adc	r25, r1
 852:	a1 1d       	adc	r26, r1
 854:	6a 0f       	add	r22, r26
 856:	71 1d       	adc	r23, r1
 858:	81 1d       	adc	r24, r1
 85a:	91 1d       	adc	r25, r1
 85c:	a1 1d       	adc	r26, r1
 85e:	20 d0       	rcall	.+64     	; 0x8a0 <__ultoa_invert+0x84>
 860:	09 f4       	brne	.+2      	; 0x864 <__ultoa_invert+0x48>
 862:	68 94       	set
 864:	3f 91       	pop	r19
 866:	2a e0       	ldi	r18, 0x0A	; 10
 868:	26 9f       	mul	r18, r22
 86a:	11 24       	eor	r1, r1
 86c:	30 19       	sub	r19, r0
 86e:	30 5d       	subi	r19, 0xD0	; 208
 870:	31 93       	st	Z+, r19
 872:	de f6       	brtc	.-74     	; 0x82a <__ultoa_invert+0xe>
 874:	cf 01       	movw	r24, r30
 876:	08 95       	ret
 878:	46 2f       	mov	r20, r22
 87a:	47 70       	andi	r20, 0x07	; 7
 87c:	40 5d       	subi	r20, 0xD0	; 208
 87e:	41 93       	st	Z+, r20
 880:	b3 e0       	ldi	r27, 0x03	; 3
 882:	0f d0       	rcall	.+30     	; 0x8a2 <__ultoa_invert+0x86>
 884:	c9 f7       	brne	.-14     	; 0x878 <__ultoa_invert+0x5c>
 886:	f6 cf       	rjmp	.-20     	; 0x874 <__ultoa_invert+0x58>
 888:	46 2f       	mov	r20, r22
 88a:	4f 70       	andi	r20, 0x0F	; 15
 88c:	40 5d       	subi	r20, 0xD0	; 208
 88e:	4a 33       	cpi	r20, 0x3A	; 58
 890:	18 f0       	brcs	.+6      	; 0x898 <__ultoa_invert+0x7c>
 892:	49 5d       	subi	r20, 0xD9	; 217
 894:	31 fd       	sbrc	r19, 1
 896:	40 52       	subi	r20, 0x20	; 32
 898:	41 93       	st	Z+, r20
 89a:	02 d0       	rcall	.+4      	; 0x8a0 <__ultoa_invert+0x84>
 89c:	a9 f7       	brne	.-22     	; 0x888 <__ultoa_invert+0x6c>
 89e:	ea cf       	rjmp	.-44     	; 0x874 <__ultoa_invert+0x58>
 8a0:	b4 e0       	ldi	r27, 0x04	; 4
 8a2:	a6 95       	lsr	r26
 8a4:	97 95       	ror	r25
 8a6:	87 95       	ror	r24
 8a8:	77 95       	ror	r23
 8aa:	67 95       	ror	r22
 8ac:	ba 95       	dec	r27
 8ae:	c9 f7       	brne	.-14     	; 0x8a2 <__ultoa_invert+0x86>
 8b0:	00 97       	sbiw	r24, 0x00	; 0
 8b2:	61 05       	cpc	r22, r1
 8b4:	71 05       	cpc	r23, r1
 8b6:	08 95       	ret
 8b8:	9b 01       	movw	r18, r22
 8ba:	ac 01       	movw	r20, r24
 8bc:	0a 2e       	mov	r0, r26
 8be:	06 94       	lsr	r0
 8c0:	57 95       	ror	r21
 8c2:	47 95       	ror	r20
 8c4:	37 95       	ror	r19
 8c6:	27 95       	ror	r18
 8c8:	ba 95       	dec	r27
 8ca:	c9 f7       	brne	.-14     	; 0x8be <__ultoa_invert+0xa2>
 8cc:	62 0f       	add	r22, r18
 8ce:	73 1f       	adc	r23, r19
 8d0:	84 1f       	adc	r24, r20
 8d2:	95 1f       	adc	r25, r21
 8d4:	a0 1d       	adc	r26, r0
 8d6:	08 95       	ret

000008d8 <__prologue_saves__>:
 8d8:	2f 92       	push	r2
 8da:	3f 92       	push	r3
 8dc:	4f 92       	push	r4
 8de:	5f 92       	push	r5
 8e0:	6f 92       	push	r6
 8e2:	7f 92       	push	r7
 8e4:	8f 92       	push	r8
 8e6:	9f 92       	push	r9
 8e8:	af 92       	push	r10
 8ea:	bf 92       	push	r11
 8ec:	cf 92       	push	r12
 8ee:	df 92       	push	r13
 8f0:	ef 92       	push	r14
 8f2:	ff 92       	push	r15
 8f4:	0f 93       	push	r16
 8f6:	1f 93       	push	r17
 8f8:	cf 93       	push	r28
 8fa:	df 93       	push	r29
 8fc:	cd b7       	in	r28, 0x3d	; 61
 8fe:	de b7       	in	r29, 0x3e	; 62
 900:	ca 1b       	sub	r28, r26
 902:	db 0b       	sbc	r29, r27
 904:	0f b6       	in	r0, 0x3f	; 63
 906:	f8 94       	cli
 908:	de bf       	out	0x3e, r29	; 62
 90a:	0f be       	out	0x3f, r0	; 63
 90c:	cd bf       	out	0x3d, r28	; 61
 90e:	09 94       	ijmp

00000910 <__epilogue_restores__>:
 910:	2a 88       	ldd	r2, Y+18	; 0x12
 912:	39 88       	ldd	r3, Y+17	; 0x11
 914:	48 88       	ldd	r4, Y+16	; 0x10
 916:	5f 84       	ldd	r5, Y+15	; 0x0f
 918:	6e 84       	ldd	r6, Y+14	; 0x0e
 91a:	7d 84       	ldd	r7, Y+13	; 0x0d
 91c:	8c 84       	ldd	r8, Y+12	; 0x0c
 91e:	9b 84       	ldd	r9, Y+11	; 0x0b
 920:	aa 84       	ldd	r10, Y+10	; 0x0a
 922:	b9 84       	ldd	r11, Y+9	; 0x09
 924:	c8 84       	ldd	r12, Y+8	; 0x08
 926:	df 80       	ldd	r13, Y+7	; 0x07
 928:	ee 80       	ldd	r14, Y+6	; 0x06
 92a:	fd 80       	ldd	r15, Y+5	; 0x05
 92c:	0c 81       	ldd	r16, Y+4	; 0x04
 92e:	1b 81       	ldd	r17, Y+3	; 0x03
 930:	aa 81       	ldd	r26, Y+2	; 0x02
 932:	b9 81       	ldd	r27, Y+1	; 0x01
 934:	ce 0f       	add	r28, r30
 936:	d1 1d       	adc	r29, r1
 938:	0f b6       	in	r0, 0x3f	; 63
 93a:	f8 94       	cli
 93c:	de bf       	out	0x3e, r29	; 62
 93e:	0f be       	out	0x3f, r0	; 63
 940:	cd bf       	out	0x3d, r28	; 61
 942:	ed 01       	movw	r28, r26
 944:	08 95       	ret

00000946 <_exit>:
 946:	f8 94       	cli

00000948 <__stop_program>:
 948:	ff cf       	rjmp	.-2      	; 0x948 <__stop_program>
